@model Core.Info.Banco.ba_ArchivoRecaudacion_Info
@{
    ViewBag.Title = "Consultar archivo recaudación";
    if (string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>
    }
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>

<script>
    $(function () {

    });
</script>

<script>
    var selectedIDs;
    function OnBeginCallback(s, e) {
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
        e.customArgs["selectedIDs"] = selectedIDs;
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdAlumno", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }
    function MostrarModal() {
        selectedIDs = "";
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListPorCruzar", "ArchivoRecaudacion",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_ArchivoRecaudacion_Saldo.PerformCallback();
                GridViewPartial_ArchivoRecaudacion_Saldo.UnselectRows();
                $("#SaldoModal").modal("show");

            },
            error: function (error) {
            }
        });
    }
    function Add() {
        var datos = {
            IDs: selectedIDs,
            IdTransaccionSession: $("#IdTransaccionSession").val(),
            IdEmpresa: $("#IdEmpresa").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("EditingAddNew", "ArchivoRecaudacion", new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
            },
            error: function (error) {
            }
        });
        selectedIDs = "";
        GridViewPartial_ArchivoRecaudacion_Saldo.PerformCallback();
        GridViewPartial_ArchivoRecaudacion_Saldo.UnselectRows();
        GridViewPartial_ArchivoRecaudacionDet.PerformCallback();
        $("#SaldoModal").modal("hide");

    }

    function GetValor() {
        var datos = {
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetValor", "ArchivoRecaudacion",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#Valor").val(data.Valor);
                $("#ValorProntoPago").val(data.ValorProntoPago);
            },
            error: function (error) {
            }
        });
    }

    function Imprimir() {
        var location = GetPathServer();
        var win = window.open(location +"/Reportes/BancoReportes/BAN_004?IdEmpresa="+@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdArchivo="+@Model.IdArchivo, '_blank');
        win.focus();
    }
</script>
@using (Html.BeginForm("Consultar", "ArchivoRecaudacion", FormMethod.Post, new { @class = "form", @role = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdArchivo, new { @id = "IdArchivo" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    if (ViewBag.MensajeSuccess != null)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h4>
                <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
            </h4>
        </div>
    }

    <div class="modal fade" id="SaldoModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Ordenes de pago</h4>
                </div>
                <div class="modal-body">
                    @Html.Action("GridViewPartial_ArchivoRecaudacion_Saldo")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="Add();">Aceptar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-7 col-md-1">
                @if (@ViewBag.Nuevo == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","ArchivoRecaudacion",new { Area = "Banco", IdEmpresa = Model.IdEmpresa },null)">
                            <i class="fa fa-plus"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                @if (@ViewBag.Modificar == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Modificar" href="@Url.Action("Modificar", "ArchivoRecaudacion", new { Area = "Banco", IdEmpresa = Model.IdEmpresa, IdArchivo = Model.IdArchivo }, null)">
                            <i class="fa fa-edit"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                @if (@ViewBag.Anular == true)
                {
                    <div class="form-group">
                        <a type="button" class="btn btn-primary form-control" title="Anular" href="@Url.Action("Anular", "ArchivoRecaudacion", new { Area = "Banco", IdEmpresa = Model.IdEmpresa, IdArchivo = Model.IdArchivo }, null)">
                            <i class="fa fa-remove"></i>
                        </a>
                    </div>
                }
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <button type="button" class="btn btn-primary form-control" onclick="Imprimir();" title="Imprimir">
                        <i class="fa fa-print"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <a type="button" class="btn btn-primary form-control" title="Descargar" href="@Url.Action("get_archivo", "ArchivoRecaudacion", new { Area = "Banco", IdEmpresa = Model.IdEmpresa, IdArchivo = Model.IdArchivo }, null)">
                        <i class="fa fa-download"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="IdBanco">Banco*</label>
                    @Html.DropDownListFor(q => q.IdBanco, new SelectList(ViewBag.lst_cuenta_bancarias, "IdBanco", "ba_descripcion"), new { @class = "form-control", @id = "IdBanco" })
                    @Html.ValidationMessageFor(q => q.IdBanco, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdBanco">Proceso bancario*</label>
                    @Html.DropDownListFor(q => q.IdProceso_bancario, new SelectList(ViewBag.lst_proceso, "IdProceso", "NombreProceso"), new { @class = "form-control", @id = "IdProceso" })
                    @Html.ValidationMessageFor(q => q.IdProceso_bancario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="cb_Fecha">Fecha*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.Fecha, settings =>
                   {
                       settings.Name = "Fecha";
                       settings.Properties.UseMaskBehavior = true;
                       settings.Properties.EditFormat = EditFormat.Date;
                       settings.Properties.EditFormatString = "dd/MM/yyyy";
                       settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ICatalogo">Valor*</label>
                    @Html.TextBoxFor(q => q.Valor, new { @class = "form-control", @id = "Valor", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.Valor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="ICatalogo">Valor Pronto Pago*</label>
                        @Html.TextBoxFor(q => q.ValorProntoPago, new { @class = "form-control", @id = "ValorProntoPago", @readonly = "readonly" })
                        @Html.ValidationMessageFor(q => q.ValorProntoPago, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="ICatalogo">Observación</label>
                    @Html.TextBoxFor(q => q.Observacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div id="Tabs" role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tab_op" aria-controls="op" role="tab" data-toggle="tab">Detalle</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 1em;" id="tab_op">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_ArchivoRecaudacionDet")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <div class="box-footer">
        <a class="btn btn-default" href="@Url.Action("Index","ArchivoRecaudacion",new { Area = "Banco" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    }
<script>
    $(function () {
        GetListBancoPorSucursal();
        //cargar_procesos();
    });

    function GetListBancoPorSucursal() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdSucursal: $("#IdSucursal").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetListBancoPorSucursal", "BancoCuenta",new { Area = "Banco"})',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (i, row) {
                    $("#IdBanco").append("<option value=" + row.IdBanco + ">" + row.ba_descripcion + "</option>");
                });
            },
            error: function (error) {
            }
        });
    }
    function cargar_procesos() {
        $("#IdProceso").empty();
        var datos = {
            IdBanco: $("#IdBanco").val(),
            SeContabiliza: 0
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_list_procesos", "ProcesosBancariosPorEmpresa", new { Area = "General" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                $.each(data, function (i, row) {
                    $("#IdProceso").append("<option value=" + row.IdProceso + ">" + row.NombreProceso + "</option>");

                });
            },
            error: function (error) {
            }
        });
    };
</script>
