@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_MatriculaRubro";
        settings.CallbackRouteValues = new { Controller = "Matricula", Action = "GridViewPartial_MatriculaRubro" };
        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdString";

        //settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        //settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Matricula", Action = "EditingUpdate", Area = "Academico" };

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowEditButton = false;
        settings.CommandColumn.ShowDeleteButton = false;

        settings.SettingsContextMenu.Enabled = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Columns.Add(column =>
        {
            column.FieldName = "Periodo";
            column.Caption = "Periodo";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "NomRubro";
            column.Caption = "Rubro";
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "pr_descripcion";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(20);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdMecanismo";
            column.Caption = "Mecanismo de pago";
            column.Width = Unit.Percentage(20);
            column.EditorProperties().ComboBox(p =>
            {
                p.Columns.Add("NombreMecanismo", "Descripción").Width = Unit.Percentage(100);
                p.TextField = "NombreMecanismo";
                p.ValueField = "IdMecanismo";
                p.ValueType = typeof(decimal);
                p.DataSource = ViewBag.lst_mecanismo;
            });
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Total";
            column.Caption = "Total";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(10);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "FechaFacturacion";
            column.Caption = "Fecha Facturación";
            column.PropertiesEdit.DisplayFormatString = "{0:dd/MM/yyyy}";
            column.EditFormSettings.Visible = DefaultBoolean.False;
            column.EditorProperties().DateEdit(sp =>
            {

            });

        });
        //settings.AfterPerformCallback = (sender, e) =>
        //{
        //    string[] array = ViewData["selectedIDs"].ToString().Split(',');
        //    var gridView = sender as MVCxGridView;
        //    for (int i = 0; i < gridView.VisibleRowCount; i++)
        //    {
        //        if (array.Where(q => q == (string)gridView.GetRowValues(i, "IdString")).Count() > 0)
        //            gridView.Selection.SetSelection(i, (bool)gridView.GetRowValues(i, "seleccionado"));
        //    }
        //};

        //settings.ClientSideEvents.RowClick = "OnRowClick";
        //settings.ClientSideEvents.EndCallback = "OnEndCallback";
        settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
    });
}
@grid.Bind(Model).GetHtml()
