@model Core.Info.Academico.aca_Matricula_Info
@{
    ViewBag.Title = "Nueva matrícula";
    if (string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script>
    var selectedIDs;
    function OnBeginCallback(s, e) {
        //Pass all selected keys to GridView callback action
        e.customArgs["selectedIDs"] = selectedIDs;
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdString", GetSelectedFieldValuesCallback);
        s.GetSelectedFieldValues("IdString", GetSelectedFieldValuesCallback_Total);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    var documentoIDs;
    function OnBeginCallback_Doc(s, e) {
        //Pass all selected keys to GridView callback action
        e.customArgs["documentoIDs"] = documentoIDs;
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
    }
    function OnSelectionChanged_Doc(s, e) {
        s.GetSelectedFieldValues("IdStringDoc", GetSelectedFieldValuesCallback_Doc);
    }
    function GetSelectedFieldValuesCallback_Doc(values) {
        //Capture all selected keys
        documentoIDs = values.join(',');
        console.log(documentoIDs);
    }

    function GetSelectedFieldValuesCallback_Total(values) {
        ItemsSeleccionados = values.join(',');

        var datos = {
            IdAnio: IdAnio.GetValue(),
            IdPlantilla: IdPlantilla.GetValue(),
            Seleccionados: ItemsSeleccionados
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SumarValores", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#ValorPlantilla").val(data.ValorPlantilla);
                $("#ValorPlantillaProntoPago").val(data.ValorPlantillaProntoPago);

            },
            error: function (error) {
            }
        });

    }

    function guardar() {
        $("#btn_guardar").attr("disabled", true);
        var datos = {
            Fecha: Fecha.GetDate(),
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdAlumno: IdAlumno.GetValue(),
            IdComboCurso: IdComboCurso.GetValue(),
            IdParalelo: IdParalelo.GetValue(),
            IdPlantilla: IdPlantilla.GetValue(),
            IdMecanismo: $("#IdMecanismo").val(),
            IdMecanismoDet: $("#IdMecanismoDet").val(),
            Observacion: $("#Observacion").val(),
            IDs: selectedIDs,
            IDs_Doc: documentoIDs,
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val(),
            IdCatalogo_FormaPago:$("#IdCatalogo_FormaPago").val(),
            vt_serie1:$("#vt_serie1").val(),
            vt_serie2:$("#vt_serie2").val(),
            vt_NumFactura:$("#vt_NumFactura").val(),
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("guardar", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.msg == "") {
                    //$("#myform").submit();
                    var url = '@Url.Action("Modificar", "Matricula")' + '?IdEmpresa=' + data.IdEmpresa + '&IdMatricula=' + data.IdMatricula + '&Exito=true';
                    window.location.href = url;
                }
                else {
                    $("#MensajeError").show();
                    $("#Mensaje").html(data.msg);
                }
                $("#btn_guardar").attr("disabled", false);
            },
            error: function (error) {
            }
        });
    }
    function SetMatriculaRubro(){
        $("#ValorPlantilla").val("");
        $("#ValorPlantillaProntoPago").val("");
        LimpiarListaDetalle();
        selectedIDs = "";
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdPlantilla: IdPlantilla.GetValue(),
            IdMatricula: $("#IdMatricula").val(),
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetMatriculaRubro", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                $("#ValorPlantilla").val(data.Valor);
                $("#ValorPlantillaProntoPago").val(data.ProntoPago);
                GridViewPartial_DetallePlantilla.PerformCallback();
            },
            error: function (error) {
            }
        });
    }
</script>
@using (Html.BeginForm("Nuevo", "Matricula", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdSucursal, new { @id = "IdSucursal" })
    @Html.HiddenFor(q => q.IdCatalogo_FormaPago, new { @id = "IdCatalogo_FormaPago" })
    @Html.HiddenFor(q => q.Validar, new { @id = "Validar" })
    if (ViewBag.mensaje != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-warning alert-dismissible">
                    <h4>
                        <i class="icon fa fa-warning"></i> @ViewBag.mensaje
                    </h4>
                </div>
            </div>
        </div>
    }
    <div class="row" id="MensajeInformativo" hidden>
        <div class="col-md-12">
            <div class="callout callout-info">
                <h4>
                    <i class="icon fa fa-exclamation"></i> <label id="MensajeInfo"></label>
                </h4>
            </div>
        </div>
    </div>
    <div class="row" id="MensajeError" hidden>
        <div class="col-md-12">
            <div class="alert alert-warning alert-dismissible">
                <h4>
                    <i class="icon fa fa-warning"></i> <label id="Mensaje"></label>
                </h4>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdEmpresa">Año Lectivo*</label>
                    @Html.Partial("_ComboBoxPartial_Anio", Model)
                    @Html.ValidationMessageFor(q => q.IdAnio, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <label for="IdCliente">Estudiante*</label>
                    @Html.Partial("_CmbAlumno", Model.IdAlumno)
                    @Html.ValidationMessageFor(q => q.IdAlumno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control" title="Crear/Modificar alumno" onclick="CrearModificarAlumno();">
                        <i class="fa fa-external-link-square"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control" title="Ver matricula anterior" onclick="VerMatriculaAnterior();">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control" title="Ver ficha socio economica" onclick="VerFichaSocioEconomica();">
                        <i class="fa fa-dollar"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="pf_fecha">Fecha*</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.Fecha, settings =>
                            {
                                settings.Name = "Fecha";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Properties.AllowMouseWheel = false;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                        @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-7">
                <div class="form-group">
                    <label for="IdEmpresa">Curso*</label>
                    @Html.Partial("_ComboBoxPartial_Curso", Model)
                    @Html.ValidationMessageFor(q => q.IdComboCurso, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="Validar"></label>
                    <button type="button" class="btn btn-primary form-control" title="Mostrar todos los cursos" onclick="ValidarCurso();">
                        <i class="fa fa-navicon"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="IdEmpresa">Paralelo*</label>
                    @Html.Partial("_ComboBoxPartial_Paralelo", Model)
                    @Html.ValidationMessageFor(q => q.IdParalelo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-7">
                <div class="form-group">
                    <label for="IdEmpresa">Plantilla*</label>
                    @Html.Partial("_ComboBoxPartial_Plantilla", Model)
                    @Html.ValidationMessageFor(q => q.IdPlantilla, "", new { @class = "text-danger" })
                </div>
            </div>
           
            <div class="col-md-2">
                <label for="IdEmpresa">Valor total</label>
                @Html.TextBoxFor(q => q.ValorPlantilla, new { @class = "form-control", @id= "ValorPlantilla", @readonly = "readonly" })
                @Html.ValidationMessageFor(q => q.ValorPlantilla, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <label for="IdEmpresa">Valor pronto pago</label>
                @Html.TextBoxFor(q => q.ValorPlantillaProntoPago, new { @class = "form-control", @id = "ValorPlantillaProntoPago", @readonly = "readonly" })
                @Html.ValidationMessageFor(q => q.ValorPlantillaProntoPago, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdPuntoVta">Punto de venta*</label>
                    @Html.DropDownListFor(q => q.IdPuntoVta, new SelectList(ViewBag.lst_ptoventa, "IdPuntoVta", "nom_PuntoVta"), new { @class = "form-control", @id = "IdPuntoVta" })
                    @Html.ValidationMessageFor(q => q.IdPuntoVta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdEmpresa">Mecanismo de pago*</label>
                    @Html.DropDownListFor(q => q.IdMecanismo, new SelectList(ViewBag.lst_mecanismo, "IdMecanismo", "NombreMecanismo"), new { @class = "form-control", @id = "IdMecanismo" })
                    @Html.ValidationMessageFor(q => q.IdMecanismo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdEmpresa">Mecanismo de pago otros rubros*</label>
                    @Html.DropDownListFor(q => q.IdMecanismoDet, new SelectList(ViewBag.lst_mecanismo, "IdMecanismo", "NombreMecanismo"), new { @class = "form-control", @id = "IdMecanismoDet" })
                    @Html.ValidationMessageFor(q => q.IdMecanismoDet, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3" id="datos_punto_venta1">
                <div class="form-group">
                    <label for="Serie1">Establecimiento*</label>
                    @Html.TextBoxFor(q => q.vt_serie1, new { @class = "form-control", @id = "vt_serie1" })
                    @Html.ValidationMessageFor(q => q.vt_serie1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3" id="datos_punto_venta2">
                <div class="form-group">
                    <label for="Serie2">Pto. Emisión*</label>
                    @Html.TextBoxFor(q => q.vt_serie2, new { @class = "form-control", @id = "vt_serie2" })
                    @Html.ValidationMessageFor(q => q.vt_serie2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3" id="datos_punto_venta3">
                <div class="form-group">
                    <label for="NumNota_Impresa"># Documento*</label>
                    @Html.TextBoxFor(q => q.vt_NumFactura, new { @class = "form-control", @id = "vt_NumFactura" })
                    @Html.ValidationMessageFor(q => q.vt_NumFactura, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <label for="IdEmpresa">Observación</label>
                @Html.TextBoxFor(q=> q.Observacion,new { @class = "form-control", id="Observacion"})
                @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />
    <div id="Tabs" role="tabpanel">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tb_matricula_paralelo" aria-controls="general" role="tab" data-toggle="tab">Alumnos por paralelo</a>
            </li>
            <li>
                <a href="#tb_plantilla_detalle" aria-controls="otros" role="tab" data-toggle="tab">Detalle de plantilla</a>
            </li>
            <li>
                <a href="#tb_documento" aria-controls="otros" role="tab" data-toggle="tab">Documentos por curso</a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content" style="padding-top: 20px">

            <div role="tabpanel" class="tab-pane active" style="margin-left: 2em;" id="tb_matricula_paralelo">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Action("GridViewPartial_AlumnosPorParalelo")
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_plantilla_detalle">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.Action("GridViewPartial_DetallePlantilla")
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_documento">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.Action("GridViewPartial_AlumnoDocumentos")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="button" class="btn btn-primary" id="btn_guardar" onclick="guardar();">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","Matricula", new { Area = "Academico" })">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<script>
    $(function () {
        GetUltimoDocumento();

        $("#IdPuntoVta").change(function () {
            GetUltimoDocumento();
        });
    });

    function GetUltimoDocumento() {
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdPuntoVta: $("#IdPuntoVta").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetUltimoDocumento", "Matricula", new { Area = "Academico"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.data_puntovta != null)
                {
                    if (data.data_puntovta.EsElectronico == true)
                    {
                        $("#datos_punto_venta1").hide();
                        $("#datos_punto_venta2").hide();
                        $("#datos_punto_venta3").hide();
                    }
                    else
                    {
                        $("#datos_punto_venta1").show();
                        $("#datos_punto_venta2").show();
                        $("#datos_punto_venta3").show();

                        if (data.data_talonario != null)
                        {
                            $("#vt_serie1").val(data.data_talonario.Establecimiento);
                            $("#vt_serie2").val(data.data_talonario.PuntoEmision);
                            $("#vt_NumFactura").val(data.data_talonario.NumDocumento);
                        }
                    }
                }
            },
            error: function (error) {
            }
        });
    }

    function CrearModificarAlumno() {
        var location = GetPathServer();
        if(IdAlumno.GetValue() > 0)
        {
            var win = window.open(location + "/Academico/Alumno/Modificar?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdAlumno=" + IdAlumno.GetValue(), '_blank');
            win.focus();
        }else
        {
            var win = window.open(location + "/Academico/Alumno/Nuevo?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa, '_blank');
            win.focus();
        }
    }

    function VerMatriculaAnterior() {
        var location = GetPathServer();
        if(IdAlumno.GetValue() != 0 || IdAlumno.GetValue()!=""){
            var datos = {
                IdEmpresa: $("#IdEmpresa").val(),
                IdAnio: IdAnio.GetValue(),
                IdAlumno: IdAlumno.GetValue()
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("VerMatriculaAnterior", "Matricula", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if(data.msg == ""){
                        $("#MensajeError").hide();
                        var win = window.open(location + "/Academico/Matricula/Modificar?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdMatricula=" + data.Matricula, '_blank');
                        win.focus();
                    }
                    else{
                        $("#MensajeError").show();
                        $("#Mensaje").html(data.msg);
                    }
                },
                error: function (error) {
                }
            });
        }
        else{
            alert("Debe seleccionar alumno");
        }
    }

    function VerFichaSocioEconomica() {
        var location = GetPathServer();
        if(IdAlumno.GetValue() != 0 && IdAlumno.GetValue()!="" && IdAlumno.GetValue()!=null){
            var datos = {
                IdEmpresa: $("#IdEmpresa").val(),
                IdAlumno: IdAlumno.GetValue()
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("VerFichaSocioEconomica", "Alumno", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log(data);
                    if(data.SocioEconomico != 0){
                        var win = window.open(location + "/Academico/SocioEconomico/Modificar?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdSocioEconomico=" + data.SocioEconomico+"&IdSocioEconomico=false", '_blank');
                        win.focus();
                    }
                    else{
                        var win = window.open(location + "/Academico/SocioEconomico/Nuevo?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdAlumno=" + IdAlumno.GetValue(), '_blank');
                        win.focus();
                    }
                },
                error: function (error) {
                }
            });
        }
        else{
            alert("Debe seleccionar alumno");
        }
    }

    function SetMatricula_PorCurso() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdComboCurso: IdComboCurso.GetValue(),
            IdParalelo: IdParalelo.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetMatricula_PorCurso", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_AlumnosPorParalelo.PerformCallback();
            },
            error: function (error) {
            }
        });
    }

    function ValidarCurso() {
        if(IdAlumno.GetValue() == 0){
            alert("Debe seleccionar un alumno");
        }
        else{
            $("#Validar").val("N");
            IdComboCurso.PerformCallback();
        }
    }

    function LimpiarListaDetalle(){
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("LimpiarListaDetalle", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                $("#ValorPlantilla").val(data.Valor);
                $("#ValorPlantillaProntoPago").val(data.ProntoPago);

                GridViewPartial_DetallePlantilla.PerformCallback();
            },
            error: function (error) {
            }
        });
    }



    function ValidarMatricula(){
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdAlumno: IdAlumno.GetValue(),
            Nuevo: "S"
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ValidarMatricula", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if(data.msgInf!=""){
                    $("#MensajeInformativo").show();
                    $("#MensajeInfo").html(data.msgInf);
                }
                else{
                    $("#MensajeInformativo").hide();
                }

                if(data.msg!= ""){
                    $("#MensajeError").show();
                    $("#Mensaje").html(data.msg);

                    $("#btn_guardar").hide();
                }
                else{
                    $("#MensajeError").hide();
                    $("#btn_guardar").show();
                }


            },
            error: function (error) {
            }
        });
    }

    function SetAlumnoDocumentos(){
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdCurso: IdComboCurso.GetValue(),
            IdAlumno: IdAlumno.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetAlumnoDocumentos", "Matricula", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_AlumnoDocumentos.PerformCallback();
            },
            error: function (error) {
            }
        });
    }
</script>

