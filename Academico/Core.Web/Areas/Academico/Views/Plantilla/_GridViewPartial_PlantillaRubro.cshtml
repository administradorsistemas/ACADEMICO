@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewPartial_PlantillaRubro";
        settings.CallbackRouteValues = new { Controller = "Plantilla", Action = "GridViewPartial_PlantillaRubro" };
        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdRubro";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Plantilla", Action = "EditingAddNew", Area = "Academico" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Plantilla", Action = "EditingUpdate", Area = "Academico" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Plantilla", Action = "EditingDelete", Area = "Academico" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Funcion para inicializar fila al presionar nuevo
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["IdRubro"] = 0;
            e.NewValues["IdProducto"] = 0;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "NomRubro";
            column.Caption = "Rubro";
            column.Width = Unit.Percentage(30);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdRubro";
            column.Caption = "Rubro";
            column.Width = Unit.Percentage(30);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbRubro_Plantilla", DataBinder.Eval(c.DataItem, "IdRubro"));
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "pr_descripcion";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(30);
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "IdProducto";
            column.Caption = "Producto";
            column.Width = Unit.Percentage(30);
            column.Visible = false;
            column.EditFormSettings.Visible = DefaultBoolean.True;
            column.SetEditItemTemplateContent(c =>
            {
                Html.RenderPartial("_CmbProducto_Plantilla", DataBinder.Eval(c.DataItem, "IdProducto"));
            });
        });

        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
        settings.ClientSideEvents.EndCallback = "function(s,e){if (s.IsEditing()) {var editor = IdProducto;editor.Focus(); Set_Anio();}}";
    });
}
@grid.Bind(Model).GetHtml()

<script>
    function Set_Anio() {
        var datos = {
            IdAnio: IdAnio.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("Set_Anio", "Plantilla", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

            },
            error: function (error) {
            }
        });
    }

    @*function SetPrecioProducto(s, e) {
        var datos = {
            IdSucursal: $("#IdSucursal").val(),
            IdBodega: $("#IdBodega").val(),
            IdProducto: s.GetValue()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetPrecioProductoEgreso", "EgresoInventario",new { Area = "Inventario" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridView_egr_inv_det.GetEditor('mv_costo_sinConversion').SetValue(data);
            },
            error: function (error) {
            }
        });
    };*@
</script>