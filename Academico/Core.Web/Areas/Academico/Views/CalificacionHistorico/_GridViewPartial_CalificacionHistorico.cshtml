@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridViewPartial_CalificacionHistorico";
        settings.CallbackRouteValues = new { Controller = "CalificacionHistorico", Action = "GridViewPartial_CalificacionHistorico", IdAlumno = ViewBag.IdAlumno };
        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdString";
        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        //Configuracion exportacion
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf).Text = "Exportar a PDF";
            t.Items.Add(GridViewToolbarCommand.ExportToXls).Text = "Exportar a XLS";
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "Exportar a XLSX";
            t.Items.Add(GridViewToolbarCommand.ExportToDocx).Text = "Exportar a DOCX";
            t.Items.Add(GridViewToolbarCommand.ExportToRtf).Text = "Exportar a RTF";
            t.Items.Add(GridViewToolbarCommand.ExportToCsv).Text = "Exportar a CSV";
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };

        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.SetDataItemTemplateContent(tc =>
            {
                ViewContext.Writer.Write(
                Html.ActionLink("Modificar", "Modificar", new { IdEmpresa = DataBinder.Eval(tc.DataItem, "IdEmpresa"), IdAnio = DataBinder.Eval(tc.DataItem, "IdAnio"), IdAlumno = DataBinder.Eval(tc.DataItem, "IdAlumno") }) );
            });
            c.SetHeaderTemplateContent(tc =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Nuevo", "Nuevo", new { IdEmpresa  = Core.Web.Helps.SessionFixed.IdEmpresa, IdAlumno = ViewBag.IdAlumno}).ToHtmlString()
                );
            });
            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Pixel(150);
        });
        settings.Columns.Add("Descripcion", "Año").Width = Unit.Percentage(10);
        settings.Columns.Add("NomNivel", "Nivel").Width = Unit.Percentage(20);
        settings.Columns.Add("NomCurso", "Curso").Width = Unit.Percentage(20);
        settings.Columns.Add("pe_nombreCompleto", "Alumno").Width = Unit.Percentage(30);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Promedio";
            column.Caption = "Promedio";
            column.PropertiesEdit.DisplayFormatString = "{0:n2}";
            column.Width = Unit.Percentage(10);
        });
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model).GetHtml()