@using System.Web.UI.WebControls;
@model Core.Info.Academico.aca_Alumno_Info
@{
    ViewBag.Title = "Modificar estudiante";
    if (string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
@using (Html.BeginForm("Modificar", "Alumno", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdAlumno, new { @id = "IdAlumno" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })
    @Html.HiddenFor(q => q.IdPersona, new { @id = "IdPersona" })
    @Html.HiddenFor(q => q.IdPersona_padre, new { @id = "IdPersona_padre" })
    @Html.HiddenFor(q => q.IdPersona_madre, new { @id = "IdPersona_madre" })
    @Html.HiddenFor(q => q.pe_Naturaleza, new { @id = "pe_Naturaleza" })
    @Html.HiddenFor(q => q.IdTipoDocumento, new { @id = "IdTipoDocumento" })
    @Html.HiddenFor(q => q.pe_cedulaRuc, new { @id = "pe_cedulaRuc" })
    @Html.HiddenFor(q => q.IdTipoCredito_padre, new { @id = "IdTipoCredito_padre" })
    @Html.HiddenFor(q => q.IdTipoCredito_madre, new { @id = "IdTipoCredito_madre" })

    <div class="modal" id="ModalBotones" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Otras opciones<label></label></h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6 form-group">
                                <label for="IdSucursal">&nbsp;</label>
                                <a class="btn btn-primary form-control" title="Familiares" href="@Url.Action("Index","AlumnoFamilia",new { Area = "Academico", IdEmpresa = Model.IdEmpresa, IdAlumno=Model.IdAlumno },"")">
                                    <i class="fa fa-users"></i> Registro de Familiares
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6 form-group">
                                <label for="IdCliente"></label>
                                <button type="button" class="btn btn-primary form-control" title="Ver ficha socio economica" onclick="VerFichaSocioEconomica();">
                                    <i class="fa fa-dollar"></i> Ver ficha Socioeconomica
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6 form-group">
                                <label for="IdSucursal"></label>
                                <a type="button" class="btn btn-primary form-control" title="Histórico de calificaciones" href="@Url.Action("Index","CalificacionHistorico",new { Area = "Academico", IdAlumno = Model.IdAlumno },"")">
                                    <i class="fa fa-list-alt"></i> Ver Calificaciones anteriores
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6 form-group">
                                <label for="IdCliente"></label>
                                <button type="button" class="btn btn-primary form-control" onclick="Imprimir();" title="Imprimir hoja de matrícula">
                                    <i class="fa fa-print"></i> Imprimir registro de última matricula
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    if (ViewBag.MensajeSuccess != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-success alert-dismissible">
                    <h4>
                        <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
                    </h4>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="Codigo">Código</label>
                    @Html.TextBoxFor(q => q.Codigo, new { @class = "form-control", @id = "Codigo", @readonly="readonly" })
                    @Html.ValidationMessageFor(q => q.Codigo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="info_persona.pe_Naturaleza">Naturaleza*</label>
                    @Html.DropDownListFor(q => q.pe_Naturaleza, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_Naturaleza", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.pe_Naturaleza, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="info_persona.IdTipoDocumento">Tipo documento*</label>
                    @Html.DropDownListFor(q => q.IdTipoDocumento, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.IdTipoDocumento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="info_persona.pe_cedulaRuc">Número documento*</label>
                    @Html.TextBoxFor(q => q.pe_cedulaRuc, new { @class = "form-control", @id = "pe_cedulaRuc", @disabled = "disabled" })
                    @Html.ValidationMessageFor(q => q.pe_cedulaRuc, "", new { @class = "text-danger" })
                    <label id="error_documento" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="">Fecha de ingreso</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.FechaIngreso, settings =>
                           {
                               settings.Name = "FechaIngreso";
                               settings.Properties.UseMaskBehavior = true;
                               settings.Properties.EditFormat = EditFormat.Date;
                               settings.Properties.EditFormatString = "dd/MM/yyyy";
                               settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                               settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                               settings.Properties.AllowMouseWheel = false;
                               settings.ReadOnly = true;
                           }).GetHtml()
                        @Html.ValidationMessageFor(q => q.FechaIngreso, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdSucursal">&nbsp;</label>
                    <a type="button" class="btn btn-primary form-control" title="Nuevo" href="@Url.Action("Nuevo","Alumno",new { Area = "Academico", IdEmpresa = Model.IdEmpresa },null)">
                        <i class="fa fa-plus"></i>
                    </a>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdSucursal">&nbsp;</label>
                    <button type="button" class="btn btn-primary form-control" title="Otras opciones" onclick="MostrarModalBotones();">
                        <i class="fa fa-bars"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group">
                    <label for="info_persona.pe_apellido">Apellidos</label>
                    @Html.TextBoxFor(q => q.pe_apellido, new { @class = "form-control", @id = "pe_apellido" })
                    @Html.ValidationMessageFor(q => q.pe_apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    <label for="info_persona.pe_nombre">Nombres</label>
                    @Html.TextBoxFor(q => q.pe_nombre, new { @class = "form-control", @id = "pe_nombre" })
                    @Html.ValidationMessageFor(q => q.pe_nombre, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="col-md-1">
                <div class="form-group">
                    <label for="IdCliente"></label>
                    <button type="button" class="btn btn-primary form-control" title="Ver ficha socio economica" onclick="VerFichaSocioEconomica();">
                        <i class="fa fa-dollar"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-1">
                <div class="form-group">
                    <label for="IdSucursal"></label>
                    <a type="button" class="btn btn-primary form-control" title="Histórico de calificaciones" href="@Url.Action("Index","CalificacionHistorico",new { Area = "Academico", IdAlumno = Model.IdAlumno },null)">
                        <i class="fa fa-list-alt"></i>
                    </a>
                </div>
            </div>*@
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="info_persona.pe_nombreCompleto">Nombre completo</label>
                    @Html.TextBoxFor(q => q.pe_nombreCompleto, new { @class = "form-control", @id = "pe_nombreCompleto" })
                    @Html.ValidationMessageFor(q => q.pe_nombreCompleto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div id="Tabs" role="tabpanel">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tb_alumno" aria-controls="general" role="tab" data-toggle="tab"><b>Datos del alumno</b></a>
            </li>
            <li>
                <a href="#tb_foto" aria-controls="foto" role="tab" data-toggle="tab"><b>Foto del alumno</b></a>
            </li>
            <li>
                <a href="#tb_padre" aria-controls="otros" role="tab" data-toggle="tab"><b>Datos del padre</b></a>
            </li>
            <li>
                <a href="#tb_madre" aria-controls="otros" role="tab" data-toggle="tab"><b>Datos de la madre</b></a>
            </li>
            <li>
                <a href="#tb_documento" aria-controls="otros" role="tab" data-toggle="tab"><b>Documentos en archivo</b></a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content" style="padding-top: 20px">

            <div role="tabpanel" class="tab-pane active" style="margin-left: 2em;" id="tb_alumno">
                <h4>Datos Generales</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Telefonos">Lugar de nacimiento</label>
                                @Html.TextBoxFor(q => q.LugarNacimiento, new { @class = "form-control", @id = "LugarNacimiento" })
                                @Html.ValidationMessageFor(q => q.LugarNacimiento, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="">Fecha de nacimiento</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.pe_fechaNacimiento, settings =>
                            {
                                settings.Name = "pe_fechaNacimiento";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.pe_fechaNacimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="pe_sexo">Sexo</label>
                                @Html.DropDownListFor(q => q.pe_sexo, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_sexo" })
                                @Html.ValidationMessageFor(q => q.pe_sexo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="pe_sexo">Tipo de sangre</label>
                                @Html.DropDownListFor(q => q.CodCatalogoSangre, new SelectList(ViewBag.lst_tipo_sangre, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_sexo" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoSangre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Grupo Etnico</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdGrupoEtnico, settings =>
                               {
                                   settings.Name = "IdGrupoEtnico";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdGrupoEtnico", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomGrupoEtnico", "Grupo Etnico").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdGrupoEtnico";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomGrupoEtnico";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_grupoetnico).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdGrupoEtnico, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Religión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdReligion, settings =>
                               {
                                   settings.Name = "IdReligion";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdReligion";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomReligion";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_religion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdReligion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano, settings =>
                                {
                                    settings.Name = "AsisteCentroCristiano";
                                    settings.Text = "Asiste a Centro Cristiano";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.AsisteCentroCristiano, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Teléfono</label>
                                @Html.TextBoxFor(q => q.pe_telfono_Contacto, new { @class = "form-control", @id = "pe_telfono_Contacto" })
                                @Html.ValidationMessageFor(q => q.pe_telfono_Contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="pe_celular">Celular</label>
                                @Html.TextBoxFor(q => q.Celular, new { @class = "form-control", @id = "Celular" })
                                @Html.ValidationMessageFor(q => q.Celular, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Correo">Correo</label>
                                @Html.TextBoxFor(q => q.Correo, new { @class = "form-control", @id = "Correo" })
                                @Html.ValidationMessageFor(q => q.Correo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Direccion">Dirección</label>
                                @Html.TextAreaFor(q => q.Direccion, new { @class = "form-control", @rows = "2", @id = "Direccion" })
                                @Html.ValidationMessageFor(q => q.Direccion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">País</label>
                                @Html.Partial("_ComboBoxPartial_Pais", Model)
                                @Html.ValidationMessageFor(q => q.IdPais, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Región</label>
                                @Html.Partial("_ComboBoxPartial_Region", Model)
                                @Html.ValidationMessageFor(q => q.Cod_Region, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Provincia</label>
                                @Html.Partial("_ComboBoxPartial_Provincia", Model)
                                @Html.ValidationMessageFor(q => q.IdProvincia, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Ciudad</label>
                                @Html.Partial("_ComboBoxPartial_Ciudad", Model)
                                @Html.ValidationMessageFor(q => q.IdCiudad, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Parroquia</label>
                                @Html.Partial("_ComboBoxPartial_Parroquia", Model)
                                @Html.ValidationMessageFor(q => q.IdParroquia, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Direccion">Sector</label>
                                @Html.TextBoxFor(q => q.Sector, new { @class = "form-control", @rows = "2", @id = "Sector" })
                                @Html.ValidationMessageFor(q => q.Sector, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.Dificultad_Lectura, settings =>
                                {
                                    settings.Name = "Dificultad_Lectura";
                                    settings.Text = "Dificultad en lectura";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.Dificultad_Lectura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.Dificultad_Escritura, settings =>
                                {
                                    settings.Name = "Dificultad_Escritura";
                                    settings.Text = "Dificultad en escritura";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.Dificultad_Escritura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.Dificultad_Matematicas, settings =>
                                {
                                    settings.Name = "Dificultad_Matematicas";
                                    settings.Text = "Dificultad en matematicas";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.Dificultad_Matematicas, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos Conadis</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="pe_sexo">Tipo de discapacidad</label>
                                @Html.DropDownListFor(q => q.CodCatalogoCONADIS, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Porcentaje de discapacidad</label>
                                @Html.TextBoxFor(q => q.PorcentajeDiscapacidad, new { @class = "form-control", @id = "PorcentajeDiscapacidad" })
                                @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Número de carnet</label>
                                @Html.TextBoxFor(q => q.NumeroCarnetConadis, new { @class = "form-control", @id = "NumeroCarnetConadis" })
                                @Html.ValidationMessageFor(q => q.NumeroCarnetConadis, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_foto">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <script type="text/javascript">
                                function onUploadControlFileUploadComplete(s, e) {
                                    if (e.isValid)
                                        // $("#uploadedImage").attr("src", e.callbackData);
                                        //actualizar_div();
                                        setElementVisible("uploadedImage", e.isValid);
                                }
                                function onImageLoad() {
                                    var externalDropZone = $("#externalDropZone");
                                    var uploadedImage = $("#uploadedImage");
                                    uploadedImage.css({
                                        left: (externalDropZone.width() - uploadedImage.width()) / 4,
                                        top: (externalDropZone.height() - uploadedImage.height()) / 4
                                    });
                                    setElementVisible("dragZone", false);
                                }
                                function setElementVisible(elementId, visible) {
                                    var el = $("#" + elementId);
                                    if (visible)
                                        el.show();
                                    else
                                        el.hide();
                                }
                            </script>
                            <div class="uploadContainer">
                                @Html.DevExpress().BinaryImage(
                               settings =>
                               {
                                   settings.Name = "pr_imagen";
                                   settings.CallbackRouteValues = new { Controller = "Alumno", Action = "get_imagen_general" };
                               }).Bind((Model.alu_foto).ToArray()).GetHtml()

                                @Html.DevExpress().UploadControl(settings =>
                               {
                                   settings.ShowProgressPanel = true;
                                   settings.CallbackRouteValues = new { Controller = "Alumno", Action = "DragAndDropImageUpload" };
                                   settings.Name = "ucDragAndDrop";
                                   settings.UploadMode = UploadControlUploadMode.Auto;
                                   settings.AutoStartUpload = true;
                                   settings.Width = Unit.Percentage(100);
                                   settings.DialogTriggerID = "externalDropZone";
                                   settings.AdvancedModeSettings.EnableDragAndDrop = true;
                                   settings.AdvancedModeSettings.EnableFileList = false;
                                   settings.AdvancedModeSettings.EnableMultiSelect = false;
                                   settings.AdvancedModeSettings.ExternalDropZoneID = "externalDropZone";
                                   settings.AdvancedModeSettings.DropZoneText = "";
                                   settings.ValidationSettings.MaxFileSize = 4194304;
                                   settings.ValidationSettings.AllowedFileExtensions = new string[] { ".jpg", ".jpeg", ".gif", ".png" };
                                   settings.ValidationSettings.ErrorStyle.CssClass = "validationMessage";
                                   settings.ClientSideEvents.FilesUploadStart = "function(s,e){nombre_imagen();}";

                                   settings.Styles.DropZone.CssClass = "uploadControlDropZone";
                                   settings.ClientSideEvents.DropZoneEnter = "function(s, e) { if(e.dropZone.id == 'externalDropZone') setElementVisible('dropZone', true); }";
                                   settings.ClientSideEvents.DropZoneLeave = "function(s, e) { if(e.dropZone.id == 'externalDropZone') setElementVisible('dropZone', false); }";
                                   settings.ClientSideEvents.FileUploadComplete = "onUploadControlFileUploadComplete";
                               }).GetHtml()
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_padre">
                <h4>Datos Generales</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.pe_Naturaleza">Naturaleza*</label>
                                @Html.DropDownListFor(q => q.pe_Naturaleza_padre, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_Naturaleza_padre" })
                                @Html.ValidationMessageFor(q => q.pe_Naturaleza_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.IdTipoDocumento">Tipo documento*</label>
                                @Html.DropDownListFor(q => q.IdTipoDocumento_padre, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento_padre" })
                                @Html.ValidationMessageFor(q => q.IdTipoDocumento_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="info_persona.pe_cedulaRuc">Número documento*</label>
                                @Html.TextBoxFor(q => q.pe_cedulaRuc_padre, new { @class = "form-control", @id = "pe_cedulaRuc_padre" })
                                @Html.ValidationMessageFor(q => q.pe_cedulaRuc_padre, "", new { @class = "text-danger" })
                                <label id="error_documento_padre" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                            </div>
                        </div>
                        <div class="col-md-offset-1 col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.SeFactura_padre, settings =>
                        {
                            settings.Name = "SeFactura_padre";
                            settings.Text = "Se factura";
                            settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){SeFactura_madre.SetChecked(false); mostrar_cliente_padre();mostrar_cliente_madre(); }";
                        }).GetHtml()
                                @Html.ValidationMessageFor(q => q.SeFactura_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EsRepresentante_padre, settings =>
                                {
                                    settings.Name = "EsRepresentante_padre";
                                    settings.Text = "Es Representante";
                                    settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){EsRepresentante_madre.SetChecked(false);}";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EsRepresentante_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="info_persona.pe_apellido">Apellidos</label>
                                @Html.TextBoxFor(q => q.pe_apellido_padre, new { @class = "form-control", @id = "pe_apellido_padre" })
                                @Html.ValidationMessageFor(q => q.pe_apellido_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="info_persona.pe_nombre">Nombres</label>
                                @Html.TextBoxFor(q => q.pe_nombre_padre, new { @class = "form-control", @id = "pe_nombre_padre" })
                                @Html.ValidationMessageFor(q => q.pe_nombre_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EstaFallecido_padre, settings =>
                                {
                                    settings.Name = "EstaFallecido_padre";
                                    settings.Text = "Está fallecido";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EstaFallecido_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="info_persona.pe_apellido">Nombre completo</label>
                                @Html.TextBoxFor(q => q.pe_nombreCompleto_padre, new { @class = "form-control", @id = "pe_nombreCompleto_padre" })
                                @Html.ValidationMessageFor(q => q.pe_nombreCompleto_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="info_persona.pe_apellido">Razón Social</label>
                                @Html.TextBoxFor(q => q.pe_razonSocial_padre, new { @class = "form-control", @id = "pe_razonSocial_padre" })
                                @Html.ValidationMessageFor(q => q.pe_razonSocial_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="">Fecha de nacimiento</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.pe_fechaNacimiento_padre, settings =>
                            {
                                settings.Name = "pe_fechaNacimiento_padre";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.pe_fechaNacimiento_padre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="pe_sexo">Sexo</label>
                                @Html.DropDownListFor(q => q.pe_sexo_padre, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_sexo_padre" })
                                @Html.ValidationMessageFor(q => q.pe_sexo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Estado civil</label>
                                @Html.DropDownListFor(q => q.IdEstadoCivil_padre, new SelectList(ViewBag.lst_estado_civil, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdEstadoCivil_padre" })
                                @Html.ValidationMessageFor(q => q.IdEstadoCivil_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Teléfono</label>
                                @Html.TextBoxFor(q => q.pe_telfono_Contacto_padre, new { @class = "form-control", @id = "pe_telfono_Contacto_padre" })
                                @Html.ValidationMessageFor(q => q.pe_telfono_Contacto_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="pe_celular">Celular</label>
                                @Html.TextBoxFor(q => q.Celular_padre, new { @class = "form-control", @id = "Celular_padre" })
                                @Html.ValidationMessageFor(q => q.Celular_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">País</label>
                                @Html.Partial("_ComboBoxPartial_Pais_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdPais_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Región</label>
                                @Html.Partial("_ComboBoxPartial_Region_padre", Model)
                                @Html.ValidationMessageFor(q => q.Cod_Region_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Provincia</label>
                                @Html.Partial("_ComboBoxPartial_Provincia_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdProvincia_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Ciudad</label>
                                @Html.Partial("_ComboBoxPartial_Ciudad_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdCiudad_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Parroquia</label>
                                @Html.Partial("_ComboBoxPartial_Parroquia_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdParroquia, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Direccion">Sector</label>
                                @Html.TextBoxFor(q => q.Sector_padre, new { @class = "form-control", @rows = "2", @id = "Sector_padre" })
                                @Html.ValidationMessageFor(q => q.Sector_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Religión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdReligion_padre, settings =>
                               {
                                   settings.Name = "IdReligion_padre";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdReligion";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomReligion";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_religion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdReligion_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano_padre, settings =>
                                {
                                    settings.Name = "AsisteCentroCristiano_padre";
                                    settings.Text = "Asiste a Centro Cristiano";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.AsisteCentroCristiano_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Correo">Correo</label>
                                @Html.TextBoxFor(q => q.Correo_padre, new { @class = "form-control", @id = "Correo_padre" })
                                @Html.ValidationMessageFor(q => q.Correo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.CasaPropia_padre, settings =>
                            {
                                settings.Name = "CasaPropia_padre";
                                settings.Text = "Tiene casa propia";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.CasaPropia_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.VehiculoPropio_padre, settings =>
                            {
                                settings.Name = "VehiculoPropio_padre";
                                settings.Text = "Tiene vehiculo propio";
                                settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){mostrar_vehiculo_padre();}";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.VehiculoPropio_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="vehiculo_padre">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo">Marca</label>
                                @Html.TextBoxFor(q => q.Marca_padre, new { @class = "form-control", @id = "Marca_padre" })
                                @Html.ValidationMessageFor(q => q.Marca_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo">Modelo</label>
                                @Html.TextBoxFor(q => q.Modelo_padre, new { @class = "form-control", @id = "Modelo_padre" })
                                @Html.ValidationMessageFor(q => q.Modelo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo">Año</label>
                                @Html.TextBoxFor(q => q.AnioVehiculo_padre, new { @class = "form-control", @id = "AnioVehiculo_padre" })
                                @Html.ValidationMessageFor(q => q.AnioVehiculo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Direccion">Dirección</label>
                                @Html.TextAreaFor(q => q.Direccion_padre, new { @class = "form-control", @rows = "2", @id = "Direccion_padre" })
                                @Html.ValidationMessageFor(q => q.Direccion_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="DatosFacturacionPadre">
                    <div class="col-md-12">
                        <h4>Datos de Cliente</h4><hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Idtipo_cliente">Tipo cliente</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.Idtipo_cliente_padre, settings =>
                                {
                                    settings.Name = "Idtipo_cliente_padre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("Idtipo_cliente", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion_tip_cliente", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                                    //Campo ID
                                    settings.Properties.ValueField = "Idtipo_cliente";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion_tip_cliente";
                                    //Boton para seleccionar ningun registro
                                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                    //settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e,){get_info_tipo_cliente()}";
                                    settings.Properties.AllowNull = true;

                                }).BindList(ViewBag.lst_clientetipo).GetHtml()
                                        @Html.ValidationMessageFor(q => q.Idtipo_cliente_padre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="IdCiudad">Ciudad*</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.IdCiudad_padre_fact, settings =>
                               {
                                   settings.Name = "IdCiudad_padre_fact";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdCiudad", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("Descripcion_Ciudad", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdCiudad";
                                   settings.Properties.ValueType = typeof(string);
                                   settings.Properties.TextField = "Descripcion_Ciudad";
                                   //Boton para seleccionar ningun registro
                                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                   settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { IdParroquia_padre_fact.PerformCallback(); }";
                               }).BindList(ViewBag.lst_ciudad).GetHtml()
                                        @Html.ValidationMessageFor(q => q.IdCiudad_padre_fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="parroquia">Parroquia*</label>
                                        @Html.Partial("_cmb_parroquia_padre", Model)
                                        @Html.ValidationMessageFor(q => q.IdParroquia_padre_fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos de trabajo</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo">Empresa donde trabaja</label>
                                @Html.TextBoxFor(q => q.EmpresaTrabajo_padre, new { @class = "form-control", @id = "EmpresaTrabajo_padre" })
                                @Html.ValidationMessageFor(q => q.EmpresaTrabajo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Instrucción</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaInst_padre, new SelectList(ViewBag.lst_instruccion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaInst_padre" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaInst_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Profesión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdProfesion_padre, settings =>
                                {
                                    settings.Name = "IdProfesion_padre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("IdProfesion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion", "Profesión").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                    //Campo ID
                                    settings.Properties.ValueField = "IdProfesion";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion";
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                }).BindList(ViewBag.lst_profesion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdProfesion_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo">Cargo</label>
                                @Html.TextBoxFor(q => q.CargoTrabajo_padre, new { @class = "form-control", @id = "CargoTrabajo_padre" })
                                @Html.ValidationMessageFor(q => q.CargoTrabajo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo">Teléfono</label>
                                @Html.TextBoxFor(q => q.TelefonoTrabajo_padre, new { @class = "form-control", @id = "TelefonoTrabajo_padre" })
                                @Html.ValidationMessageFor(q => q.TelefonoTrabajo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo">Años de servicio</label>
                                @Html.TextBoxFor(q => q.AniosServicio_padre, new { @class = "form-control", @id = "AniosServicio_padre" })
                                @Html.ValidationMessageFor(q => q.AniosServicio_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo">Ingreso mensual</label>
                                @Html.TextBoxFor(q => q.IngresoMensual_padre, new { @class = "form-control", @id = "IngresoMensual_padre" })
                                @Html.ValidationMessageFor(q => q.IngresoMensual_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Correo">Dirección</label>
                                @Html.TextBoxFor(q => q.DireccionTrabajo_padre, new { @class = "form-control", @id = "DireccionTrabajo_padre" })
                                @Html.ValidationMessageFor(q => q.DireccionTrabajo_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos Conadis</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="pe_sexo">Tipo de discapacidad</label>
                                @Html.DropDownListFor(q => q.CodCatalogoCONADIS_padre, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS_padre" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Porcentaje de discapacidad</label>
                                @Html.TextBoxFor(q => q.PorcentajeDiscapacidad_padre, new { @class = "form-control", @id = "PorcentajeDiscapacidad_padre" })
                                @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Número de carnet</label>
                                @Html.TextBoxFor(q => q.NumeroCarnetConadis_padre, new { @class = "form-control", @id = "NumeroCarnetConadis_padre" })
                                @Html.ValidationMessageFor(q => q.NumeroCarnetConadis_padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_madre">
                <h4>Datos Generales</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.pe_Naturaleza">Naturaleza*</label>
                                @Html.DropDownListFor(q => q.pe_Naturaleza_madre, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_Naturaleza_madre" })
                                @Html.ValidationMessageFor(q => q.pe_Naturaleza_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.IdTipoDocumento">Tipo documento*</label>
                                @Html.DropDownListFor(q => q.IdTipoDocumento_madre, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento_madre" })
                                @Html.ValidationMessageFor(q => q.IdTipoDocumento_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="info_persona.pe_cedulaRuc">Número documento*</label>
                                @Html.TextBoxFor(q => q.pe_cedulaRuc_madre, new { @class = "form-control", @id = "pe_cedulaRuc_madre" })
                                @Html.ValidationMessageFor(q => q.pe_cedulaRuc_madre, "", new { @class = "text-danger" })
                                <label id="error_documento_madre" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                            </div>
                        </div>
                        <div class="col-md-offset-1 col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.SeFactura_madre, settings =>
                        {
                            settings.Name = "SeFactura_madre";
                            settings.Text = "Se factura";
                            settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){SeFactura_padre.SetChecked(false); mostrar_cliente_madre(); mostrar_cliente_padre();}";
                        }).GetHtml()
                                @Html.ValidationMessageFor(q => q.SeFactura_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EsRepresentante_madre, settings =>
                                {
                                    settings.Name = "EsRepresentante_madre";
                                    settings.Text = "Es Representante";
                                    settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){EsRepresentante_padre.SetChecked(false);}";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EsRepresentante_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="info_persona.pe_apellido">Apellidos</label>
                                @Html.TextBoxFor(q => q.pe_apellido_madre, new { @class = "form-control", @id = "pe_apellido_madre" })
                                @Html.ValidationMessageFor(q => q.pe_apellido_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="info_persona.pe_nombre">Nombres</label>
                                @Html.TextBoxFor(q => q.pe_nombre_madre, new { @class = "form-control", @id = "pe_nombre_madre" })
                                @Html.ValidationMessageFor(q => q.pe_nombre_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EstaFallecido_madre, settings =>
                                {
                                    settings.Name = "EstaFallecido_madre";
                                    settings.Text = "Está fallecida";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EstaFallecido_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="info_persona.pe_apellido">Nombre completo</label>
                                @Html.TextBoxFor(q => q.pe_nombreCompleto_madre, new { @class = "form-control", @id = "pe_nombreCompleto_madre" })
                                @Html.ValidationMessageFor(q => q.pe_nombreCompleto_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="info_persona.pe_apellido">Razón Social</label>
                                @Html.TextBoxFor(q => q.pe_razonSocial_madre, new { @class = "form-control", @id = "pe_razonSocial_madre" })
                                @Html.ValidationMessageFor(q => q.pe_razonSocial_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="">Fecha de nacimiento</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.pe_fechaNacimiento_madre, settings =>
                            {
                                settings.Name = "pe_fechaNacimiento_madre";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.pe_fechaNacimiento_madre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="pe_sexo">Sexo</label>
                                @Html.DropDownListFor(q => q.pe_sexo_madre, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "pe_sexo_madre" })
                                @Html.ValidationMessageFor(q => q.pe_sexo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Estado civil</label>
                                @Html.DropDownListFor(q => q.IdEstadoCivil_madre, new SelectList(ViewBag.lst_estado_civil, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdEstadoCivil_madre" })
                                @Html.ValidationMessageFor(q => q.IdEstadoCivil_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Teléfono</label>
                                @Html.TextBoxFor(q => q.pe_telfono_Contacto_madre, new { @class = "form-control", @id = "pe_telfono_Contacto_madre" })
                                @Html.ValidationMessageFor(q => q.pe_telfono_Contacto_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="pe_celular">Celular</label>
                                @Html.TextBoxFor(q => q.Celular_madre, new { @class = "form-control", @id = "Celular_madre" })
                                @Html.ValidationMessageFor(q => q.Celular_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">País</label>
                                @Html.Partial("_ComboBoxPartial_Pais_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdPais_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Región</label>
                                @Html.Partial("_ComboBoxPartial_Region_madre", Model)
                                @Html.ValidationMessageFor(q => q.Cod_Region_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Provincia</label>
                                @Html.Partial("_ComboBoxPartial_Provincia_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdProvincia_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Ciudad</label>
                                @Html.Partial("_ComboBoxPartial_Ciudad_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdCiudad_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Parroquia</label>
                                @Html.Partial("_ComboBoxPartial_Parroquia_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdParroquia, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Direccion">Sector</label>
                                @Html.TextBoxFor(q => q.Sector_madre, new { @class = "form-control", @rows = "2", @id = "Sector_madre" })
                                @Html.ValidationMessageFor(q => q.Sector_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Religión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdReligion_madre, settings =>
                               {
                                   settings.Name = "IdReligion_madre";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdReligion";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomReligion";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_religion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdReligion_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano_madre, settings =>
                                {
                                    settings.Name = "AsisteCentroCristiano_madre";
                                    settings.Text = "Asiste a Centro Cristiano";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.AsisteCentroCristiano_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Correo">Correo</label>
                                @Html.TextBoxFor(q => q.Correo_madre, new { @class = "form-control", @id = "Correo_madre" })
                                @Html.ValidationMessageFor(q => q.Correo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.CasaPropia_madre, settings =>
                            {
                                settings.Name = "CasaPropia_madre";
                                settings.Text = "Tiene casa propia";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.CasaPropia_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.VehiculoPropio_madre, settings =>
                            {
                                settings.Name = "VehiculoPropio_madre";
                                settings.Text = "Tiene vehiculo propio";
                                settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){mostrar_vehiculo_madre();}";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.VehiculoPropio_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="vehiculo_madre">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo">Marca</label>
                                @Html.TextBoxFor(q => q.Marca_madre, new { @class = "form-control", @id = "Marca_madre" })
                                @Html.ValidationMessageFor(q => q.Marca_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo">Modelo</label>
                                @Html.TextBoxFor(q => q.Modelo_madre, new { @class = "form-control", @id = "Modelo_madre" })
                                @Html.ValidationMessageFor(q => q.Modelo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo">Año</label>
                                @Html.TextBoxFor(q => q.AnioVehiculo_madre, new { @class = "form-control", @id = "AnioVehiculo_madre" })
                                @Html.ValidationMessageFor(q => q.AnioVehiculo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Direccion">Dirección</label>
                                @Html.TextAreaFor(q => q.Direccion_madre, new { @class = "form-control", @rows = "2", @id = "Direccion_madre" })
                                @Html.ValidationMessageFor(q => q.Direccion_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="DatosFacturacionMadre">
                    <div class="col-md-12">
                        <h4>Datos de Cliente</h4><hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Idtipo_cliente">Tipo cliente</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.Idtipo_cliente_madre, settings =>
                                {
                                    settings.Name = "Idtipo_cliente_madre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("Idtipo_cliente", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion_tip_cliente", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                                    //Campo ID
                                    settings.Properties.ValueField = "Idtipo_cliente";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion_tip_cliente";
                                    //Boton para seleccionar ningun registro
                                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                    //settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e,){get_info_tipo_cliente()}";
                                    settings.Properties.AllowNull = true;

                                }).BindList(ViewBag.lst_clientetipo).GetHtml()
                                        @Html.ValidationMessageFor(q => q.Idtipo_cliente_padre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="IdCiudad">Ciudad*</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.IdCiudad_madre_fact, settings =>
                               {
                                   settings.Name = "IdCiudad_madre_fact";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdCiudad", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("Descripcion_Ciudad", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdCiudad";
                                   settings.Properties.ValueType = typeof(string);
                                   settings.Properties.TextField = "Descripcion_Ciudad";
                                   //Boton para seleccionar ningun registro
                                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                   settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { IdParroquia_madre_fact.PerformCallback(); }";
                               }).BindList(ViewBag.lst_ciudad).GetHtml()
                                        @Html.ValidationMessageFor(q => q.IdCiudad_madre_fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="parroquia">Parroquia*</label>
                                        @Html.Partial("_cmb_parroquia_madre", Model)
                                        @Html.ValidationMessageFor(q => q.IdParroquia_madre_fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos de trabajo</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo">Empresa donde trabaja</label>
                                @Html.TextBoxFor(q => q.EmpresaTrabajo_madre, new { @class = "form-control", @id = "EmpresaTrabajo_madre" })
                                @Html.ValidationMessageFor(q => q.EmpresaTrabajo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Instrucción</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaInst_madre, new SelectList(ViewBag.lst_instruccion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaInst_madre" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaInst_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Profesión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdProfesion_madre, settings =>
                                {
                                    settings.Name = "IdProfesion_madre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("IdProfesion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion", "Profesión").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                    //Campo ID
                                    settings.Properties.ValueField = "IdProfesion";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion";
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                }).BindList(ViewBag.lst_profesion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdProfesion_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo">Cargo</label>
                                @Html.TextBoxFor(q => q.CargoTrabajo_madre, new { @class = "form-control", @id = "CargoTrabajo_madre" })
                                @Html.ValidationMessageFor(q => q.CargoTrabajo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo">Teléfono</label>
                                @Html.TextBoxFor(q => q.TelefonoTrabajo_madre, new { @class = "form-control", @id = "TelefonoTrabajo_madre" })
                                @Html.ValidationMessageFor(q => q.TelefonoTrabajo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo">Años de servicio</label>
                                @Html.TextBoxFor(q => q.AniosServicio_madre, new { @class = "form-control", @id = "AniosServicio_madre" })
                                @Html.ValidationMessageFor(q => q.AniosServicio_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo">Ingreso mensual</label>
                                @Html.TextBoxFor(q => q.IngresoMensual_madre, new { @class = "form-control", @id = "IngresoMensual_madre" })
                                @Html.ValidationMessageFor(q => q.IngresoMensual_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Correo">Dirección</label>
                                @Html.TextBoxFor(q => q.DireccionTrabajo_madre, new { @class = "form-control", @id = "DireccionTrabajo_madre" })
                                @Html.ValidationMessageFor(q => q.DireccionTrabajo_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos Conadis</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="pe_sexo">Tipo de discapacidad</label>
                                @Html.DropDownListFor(q => q.CodCatalogoCONADIS_madre, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS_madre" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Porcentaje de discapacidad</label>
                                @Html.TextBoxFor(q => q.PorcentajeDiscapacidad_madre, new { @class = "form-control", @id = "PorcentajeDiscapacidad_madre" })
                                @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Número de carnet</label>
                                @Html.TextBoxFor(q => q.NumeroCarnetConadis_madre, new { @class = "form-control", @id = "NumeroCarnetConadis_madre" })
                                @Html.ValidationMessageFor(q => q.NumeroCarnetConadis_madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_documento">
                <div class="row">
                    <div class="col-md-12">
                        @Html.Action("GridViewPartial_AlumnoDocumento")
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index", "Alumno", new { Area = "Academico" }, null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script type="text/javascript">
        $(function () {
            mostrar_vehiculo_padre();
            mostrar_vehiculo_madre();
            mostrar_cliente_padre();
            mostrar_cliente_madre();
        })
        //$("#pe_cedulaRuc").blur(function () {
        //    Validar_cedula_ruc();
        //});

        $("#pe_cedulaRuc_padre").change(function () {
            Validar_cedula_ruc_padre();
        });

        $("#pe_cedulaRuc_madre").change(function () {
            Validar_cedula_ruc_madre();
        });

        $("#pe_apellido").change(function () {
            actualizar_nombre_completo();
        });
        $("#pe_nombre").change(function () {
            actualizar_nombre_completo();
        });

        $("#pe_apellido_padre").change(function () {
            actualizar_nombre_completo_padre("N");
        });
        $("#pe_nombre_padre").change(function () {
            actualizar_nombre_completo_padre("N");
        });
        $("#pe_razonSocial_padre").change(function () {
            actualizar_nombre_completo_padre("R");
        });

        $("#pe_apellido_madre").change(function () {
            actualizar_nombre_completo_madre("N");
        });
        $("#pe_nombre_madre").change(function () {
            actualizar_nombre_completo_madre("N");
        });
        $("#pe_razonSocial_madre").change(function () {
            actualizar_nombre_completo_madre("R");
        });

        $("#pe_cedulaRuc").change(function () {
            get_info_x_num_cedula();
        });

        $("#pe_cedulaRuc_padre").change(function () {
            get_info_x_num_cedula_padre();
        });

        $("#pe_cedulaRuc_madre").change(function () {
            get_info_x_num_cedula_madre();
        });

        $("#pe_cedulaRuc").change(function () {
            var tipo_doc = $("#IdTipoDocumento").val();
            var cedula = $("#pe_cedulaRuc").val();

            if (tipo_doc == "RUC") {
                if (cedula.length > 13) {
                    var len = $("#pe_cedulaRuc").val();
                    len = len.substring(0, 13);
                    $("#pe_cedulaRuc").val(len);
                }
            }
            else
                if (tipo_doc == "CED") {
                    if (cedula.length > 10) {
                        var len = $("#pe_cedulaRuc").val();
                        len = len.substring(0, 10);
                        $("#pe_cedulaRuc").val(len);
                    }
                }
        });

        $("#pe_cedulaRuc_padre").change(function () {
            var tipo_doc = $("#IdTipoDocumento_padre").val();
            var cedula = $("#pe_cedulaRuc_padre").val();

            if (tipo_doc == "RUC") {
                if (cedula.length > 13) {
                    var len = $("#pe_cedulaRuc_padre").val();
                    len = len.substring(0, 13);
                    $("#pe_cedulaRuc_padre").val(len);
                }

            }
            else
                if (tipo_doc == "CED") {
                    if (cedula.length > 10) {
                        var len = $("#pe_cedulaRuc_padre").val();
                        len = len.substring(0, 10);
                        $("#pe_cedulaRuc_padre").val(len);
                    }
                }
        });

        $("#pe_cedulaRuc_madre").change(function () {
            var tipo_doc = $("#IdTipoDocumento_madre").val();
            var cedula = $("#pe_cedulaRuc_madre").val();

            if (tipo_doc == "RUC") {
                if (cedula.length > 13) {
                    var len = $("#pe_cedulaRuc_madre").val();
                    len = len.substring(0, 13);
                    $("#pe_cedulaRuc_madre").val(len);
                }

            }
            else
                if (tipo_doc == "CED") {
                    if (cedula.length > 10) {
                        var len = $("#pe_cedulaRuc_madre").val();
                        len = len.substring(0, 10);
                        $("#pe_cedulaRuc_madre").val(len);
                    }
                }
        });

        function actualizar_nombre_completo() {
            var apellido = $("#pe_apellido").val();
            var nombre = $("#pe_nombre").val();

            var nombre_completo = apellido + ' ' + nombre;
            $("#pe_nombreCompleto").val(nombre_completo)
        }

        function get_info_x_num_cedula() {
            var cedula = $("#pe_cedulaRuc").val();
            var tipo_doc = $("#IdTipoDocumento").val();

            if (cedula == null) {
                vaciar_campos_persona();
                return;
            }

            if (tipo_doc == "RUC") {
                if (cedula.length != 13) {
                    alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                    $("#pe_cedulaRuc").val("");
                    vaciar_campos_persona();
                    return;
                }
            } else
                if (tipo_doc == "CED") {
                    if (cedula.length != 10) {
                        alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                        $("#pe_cedulaRuc").val("");
                        vaciar_campos_persona();
                        return;
                    }
                }

            var datos = {
                IdEmpresa: $("#IdEmpresa").val(),
                pe_cedulaRuc: cedula
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_info_x_num_cedula", "Alumno",new { Area = "Academico"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "") {
                        return;
                    }

                    if (data.IdAlumno != 0) {
                        alert("El alumno ya existe con el ID: " + data.IdAlumo);
                        window.location.href = '@Url.Action("Index", "Alumno", new { Area = "Academico" })'
                    }
                    else {
                        if (data.IdPersona != 0 && data.IdAlumno == 0) {
                            $("#IdPersona").val(data.IdPersona);
                            $("#pe_Naturaleza").val(data.pe_Naturaleza);
                            $("#IdTipoDocumento").val(data.IdTipoDocumento);
                            $("#pe_nombre").val(data.pe_nombre);
                            $("#pe_apellido").val(data.pe_apellido);
                            $("#pe_nombreCompleto").val(data.pe_nombreCompleto);
                            $("#pe_sexo").val(data.pe_sexo);
                            pe_fechaNacimiento.SetDate(new Date(data.anio, data.mes, data.dia));
                            $("#Correo").val(data.Correo);
                            $("#Celular").val(data.Celular);
                            $("#Direccion").val(data.Direccion);
                            $("#pe_telfono_Contacto").val(data.pe_telfono_Contacto);
                            $("#CodCatalogoSangre").val(data.CodCatalogoSangre);
                            $("#CodCatalogoCONADIS").val(data.CodCatalogoCONADIS);
                            $("#NumeroCarnetConadis").val(data.NumeroCarnetConadis);
                            $("#PorcentajeDiscapacidad").val(data.PorcentajeDiscapacidad);
                            IdReligion.SetValue(data.IdReligion);
                            AsisteCentroCristiano.SetChecked(data.AsisteCentroCristiano);
                            IdGrupoEtnico.SetValue(data.IdGrupoEtnico);
                        }
                        else {
                            vaciar_campos_persona();
                        }
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }

        function get_info_x_num_cedula_padre() {
            var cedula = $("#pe_cedulaRuc_padre").val();
            var tipo_doc = $("#IdTipoDocumento_padre").val();

            if (cedula == null) {
                vaciar_campos_padre();
                return;
            }

            if (tipo_doc == "RUC") {
                if (cedula.length != 13) {
                    alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                    $("#pe_cedulaRuc_padre").val("");
                    vaciar_campos_padre();
                    return;
                }
            } else
                if (tipo_doc == "CED") {
                    if (cedula.length != 10) {
                        alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                        $("#pe_cedulaRuc_padre").val("");
                        vaciar_campos_padre();
                        return;
                    }
                }

            var datos = {
                IdEmpresa: $("#IdEmpresa").val(),
                IdAlumno: $("#IdAlumno").val(),
                pe_cedulaRuc: cedula
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_info_x_num_cedula_familia", "Alumno",new { Area = "Academico"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "") {
                        return;
                    }
                    //console.log(data);
                    if (data.Secuencia != 0) {
                        alert("Ya existe un familiar relacionado con la identificación ingresada");
                        window.location.href = '@Url.Action("Index", "Alumno", new { Area = "Academico" })'
                    }
                    else {

                        if (data.IdPersona != 0) {
                            $("#IdPersona_padre").val(data.IdPersona);
                            $("#pe_Naturaleza_padre").val(data.pe_Naturaleza);
                            $("#IdTipoDocumento_padre").val(data.IdTipoDocumento);
                            $("#pe_nombre_padre").val(data.pe_nombre);
                            $("#pe_apellido_padre").val(data.pe_apellido);
                            $("#pe_nombreCompleto_padre").val(data.pe_nombreCompleto);
                            $("#pe_razonSocial_padre").val(data.pe_razonSocial);
                            pe_fechaNacimiento_padre.SetDate(new Date(data.anio, data.mes, data.dia));
                            $("#Correo_padre").val(data.Correo);
                            $("#Celular_padre").val(data.Celular);
                            $("#Direccion_padre").val(data.Direccion);
                            $("#pe_telfono_Contacto_padre").val(data.pe_telfono_Contacto);
                            $("#CodCatalogoSangre_padre").val(data.CodCatalogoSangre);
                            $("#CodCatalogoCONADIS_padre").val(data.CodCatalogoCONADIS);
                            $("#NumeroCarnetConadis_padre").val(data.NumeroCarnetConadis);
                            $("#PorcentajeDiscapacidad_padre").val(data.PorcentajeDiscapacidad);
                            $("#IdEstadoCivil_padre").val(data.IdEstadoCivil);
                            $("#pe_sexo_padre").val(data.pe_sexo);
                            //$("#IdProfesion_padre").val(data.IdProfesion);
                            IdProfesion_padre.SetValue(data.IdProfesion);
                            $("#IdCatalogoFichaInst_padre").val(data.IdCatalogoFichaInst);
                            $("#EmpresaTrabajo_padre").val(data.EmpresaTrabajo);
                            $("#DireccionTrabajo_padre").val(data.DireccionTrabajo);
                            $("#TelefonoTrabajo_padre").val(data.TelefonoTrabajo);
                            $("#CargoTrabajo_padre").val(data.CargoTrabajo);
                            $("#AniosServicio_padre").val(data.AniosServicio);
                            $("#IngresoMensual_padre").val(data.IngresoMensual);
                            VehiculoPropio_padre.SetChecked(data.VehiculoPropio);
                            $("#Marca_padre").val(data.Marca);
                            $("#Modelo_padre").val(data.Modelo);
                            $("#CasaPropia_padre").val(data.CasaPropia);
                            $("#AnioVehiculo_padre").val(data.AnioVehiculo);
                            IdReligion_padre.SetValue(data.IdReligion);
                            IdPais_padre.SetValue(data.IdPais);
                            Cod_Region_padre.SetValue(data.Cod_Region);
                            IdProvincia_padre.SetValue(data.IdProvincia);
                            IdCiudad_padre.SetValue(data.IdCiudad);
                            IdParroquia_padre.SetValue(data.IdParroquia);
                            $("#Sector_padre").val(data.Sector);
                            AsisteCentroCristiano_padre.SetChecked(data.AsisteCentroCristiano);

                            mostrar_vehiculo_padre();
                        }
                        else {
                            vaciar_campos_padre();
                            IdPais_padre.SetValue(data.IdPais);
                            Cod_Region_padre.SetValue(data.Cod_Region);
                            IdProvincia_padre.SetValue(data.IdProvincia);
                            IdCiudad_padre.SetValue(data.IdCiudad);
                            IdParroquia_padre.SetValue(data.IdParroquia);
                        }
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }

        function get_info_x_num_cedula_madre() {
            var cedula = $("#pe_cedulaRuc_madre").val();
            var tipo_doc = $("#IdTipoDocumento_madre").val();

            if (cedula == null) {
                vaciar_campos_madre();
                return;
            }

            if (tipo_doc == "RUC") {
                if (cedula.length != 13) {
                    alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                    $("#pe_cedulaRuc_madre").val("");
                    vaciar_campos_padre();
                    return;
                }
            } else
                if (tipo_doc == "CED") {
                    if (cedula.length != 10) {
                        alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                        $("#pe_cedulaRuc_madre").val("");
                        vaciar_campos_madre();
                        return;
                    }
                }

            var datos = {
                IdEmpresa: $("#IdEmpresa").val(),
                IdAlumno: $("#IdAlumno").val(),
                pe_cedulaRuc: cedula
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_info_x_num_cedula_familia", "Alumno",new { Area = "Academico"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "") {
                        return;
                    }
                    if (data.Secuencia != 0) {
                        alert("El familiar ya existe con la secuencia: " + data.Secuencia);
                        window.location.href = '@Url.Action("Index", "Alumno", new { Area = "Academico" })'
                    }
                    else {
                        console.log(data);
                        if (data.IdPersona != 0) {
                            $("#IdPersona_madre").val(data.IdPersona);
                            $("#pe_Naturaleza_madre").val(data.pe_Naturaleza);
                            $("#IdTipoDocumento_madre").val(data.IdTipoDocumento);
                            $("#pe_nombre_madre").val(data.pe_nombre);
                            $("#pe_apellido_madre").val(data.pe_apellido);
                            $("#pe_nombreCompleto_madre").val(data.pe_nombreCompleto);
                            $("#pe_razonSocial_madre").val(data.pe_razonSocial);
                            pe_fechaNacimiento_madre.SetDate(new Date(data.anio, data.mes, data.dia));
                            $("#Correo_madre").val(data.Correo);
                            $("#Celular_madre").val(data.Celular);
                            $("#Direccion_madre").val(data.Direccion);
                            $("#pe_telfono_Contacto_madre").val(data.pe_telfono_Contacto);
                            $("#CodCatalogoSangre_madre").val(data.CodCatalogoSangre);
                            $("#CodCatalogoCONADIS_madre").val(data.CodCatalogoCONADIS);
                            $("#NumeroCarnetConadis_madre").val(data.NumeroCarnetConadis);
                            $("#PorcentajeDiscapacidad_madre").val(data.PorcentajeDiscapacidad);
                            $("#IdEstadoCivil_madre").val(data.IdEstadoCivil);
                            $("#pe_sexo_madre").val(data.pe_sexo);
                            //$("#IdProfesion_madre").val(data.IdProfesion);
                            IdProfesion_madre.SetValue(data.IdProfesion);
                            $("#IdCatalogoFichaInst_madre").val(data.IdCatalogoFichaInst);
                            $("#EmpresaTrabajo_madre").val(data.EmpresaTrabajo);
                            $("#DireccionTrabajo_madre").val(data.DireccionTrabajo);
                            $("#TelefonoTrabajo_madre").val(data.TelefonoTrabajo);
                            $("#CargoTrabajo_madre").val(data.CargoTrabajo);
                            $("#AniosServicio_madre").val(data.AniosServicio);
                            $("#IngresoMensual_madre").val(data.IngresoMensual);
                            VehiculoPropio_madre.SetChecked(data.VehiculoPropio);
                            $("#Marca_madre").val(data.Marca);
                            $("#Modelo_madre").val(data.Modelo);
                            $("#CasaPropia_madre").val(data.CasaPropia);
                            $("#AnioVehiculo_madre").val(data.AnioVehiculo);
                            IdReligion_madre.SetValue(data.IdReligion);
                            AsisteCentroCristiano_padre.SetChecked(data.AsisteCentroCristiano);
                            IdPais_madre.SetValue(data.IdPais);
                            Cod_Region_madre.SetValue(data.Cod_Region);
                            IdProvincia_madre.SetValue(data.IdProvincia);
                            IdCiudad_madre.SetValue(data.IdCiudad);
                            IdParroquia_madre.SetValue(data.IdParroquia);
                            $("#Sector_madre").val(data.Sector);

                            mostrar_vehiculo_madre();
                        }
                        else {
                            vaciar_campos_madre();
                            IdPais_madre.SetValue(data.IdPais);
                            Cod_Region_madre.SetValue(data.Cod_Region);
                            IdProvincia_madre.SetValue(data.IdProvincia);
                            IdCiudad_madre.SetValue(data.IdCiudad);
                            IdParroquia_madre.SetValue(data.IdParroquia);
                        }
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }

        function vaciar_campos_persona() {
            $("#IdPersona").val(0);
            $("#pe_nombre").val("");
            $("#pe_apellido").val("");
            $("#pe_nombreCompleto").val("");
            $("#pe_sexo").val("");
            pe_fechaNacimiento.SetDate(null);
            $("#Correo").val("");
            $("#Celular").val("");
            $("#Direccion").val("");
            $("#pe_telfono_Contacto").val("");
            $("#CodCatalogoSangre").val("");
            $("#CodCatalogoCONADIS").val("");
            $("#NumeroCarnetConadis").val("");
            $("#PorcentajeDiscapacidad").val("");
            IdReligion.SetValue(null);
            IdGrupoEtnico.SetValue(null);
            AsisteCentroCristiano.SetChecked(false);
        }

        function vaciar_campos_padre() {
            $("#IdPersona_padre").val(0);
            $("#pe_nombre_padre").val("");
            $("#pe_apellido_padre").val("");
            $("#pe_nombreCompleto_padre").val("");
            $("#pe_razonSocial_padre").val("");
            pe_fechaNacimiento_padre.SetDate(null);
            $("#Correo_padre").val("");
            $("#Celular_padre").val("");
            $("#Direccion_padre").val("");
            $("#pe_telfono_Contacto_padre").val("");
            $("#CodCatalogoSangre_padre").val("");
            $("#CodCatalogoCONADIS_padre").val("");
            $("#NumeroCarnetConadis_padre").val("");
            $("#PorcentajeDiscapacidad_padre").val("");
            $("#IdEstadoCivil_padre").val("");
            $("#pe_sexo_padre").val("");
            //$("#IdProfesion_padre").val("0");
            IdProfesion_padre.SetValue(null);
            $("#EmpresaTrabajo_padre").val("");
            $("#DireccionTrabajo_padre").val("");
            $("#TelefonoTrabajo_padre").val("");
            $("#CargoTrabajo_padre").val("");
            $("#AniosServicio_padre").val("");
            $("#IngresoMensual_padre").val("0");
            VehiculoPropio_padre.SetChecked(false);
            CasaPropia_padre.SetChecked(false);
            $("#Marca_padre").val("");
            $("#Modelo_padre").val("");
            $("#AnioVehiculo_padre").val("");
            IdReligion_padre.SetValue(null);
            AsisteCentroCristiano_padre.SetChecked(false);
            IdPais_padre.SetValue(null);
            Cod_Region_padre.SetValue(null);
            IdProvincia_padre.SetValue(null);
            IdCiudad_padre.SetValue(null);
            IdParroquia_padre.SetValue(null);
            $("#Sector_padre").val("");

            mostrar_vehiculo_padre();
        }

        function vaciar_campos_madre() {
            $("#IdPersona_madre").val(0);
            $("#pe_nombre_madre").val("");
            $("#pe_apellido_madre").val("");
            $("#pe_nombreCompleto_madre").val("");
            $("#pe_razonSocial_madre").val("");
            pe_fechaNacimiento_madre.SetDate(null);
            $("#Correo_madre").val("");
            $("#Celular_madre").val("");
            $("#Direccion_madre").val("");
            $("#pe_telfono_Contacto_madre").val("");
            $("#CodCatalogoSangre_madre").val("");
            $("#CodCatalogoCONADIS_madre").val("");
            $("#NumeroCarnetConadis_madre").val("");
            $("#PorcentajeDiscapacidad_madre").val("");
            $("#IdEstadoCivil_madre").val("");
            $("#pe_sexo_madre").val("");
            //$("#IdProfesion_madre").val("0");
            IdProfesion_madre.SetValue(null);
            $("#EmpresaTrabajo_madre").val("");
            $("#DireccionTrabajo_madre").val("");
            $("#TelefonoTrabajo_madre").val("");
            $("#CargoTrabajo_madre").val("");
            $("#AniosServicio_madre").val("");
            $("#IngresoMensual_madre").val("0");
            VehiculoPropio_madre.SetChecked(false);
            CasaPropia_madre.SetChecked(false);
            $("#Marca_madre").val("");
            $("#Modelo_madre").val("");
            $("#AnioVehiculo_madre").val("");
            IdReligion_madre.SetValue(null);
            AsisteCentroCristiano_madre.SetChecked(false);
            IdPais_madre.SetValue(null);
            Cod_Region_madre.SetValue(null);
            IdProvincia_madre.SetValue(null);
            IdCiudad_madre.SetValue(null);
            IdParroquia_madre.SetValue(null);
            $("#Sector_madre").val("");

            mostrar_vehiculo_madre();
        }



        function Validar_cedula_ruc() {
            var datos = {
                naturaleza: $("#pe_Naturaleza").val(),
                tipo_documento: $("#IdTipoDocumento").val(),
                cedula_ruc: $("#pe_cedulaRuc").val(),
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Validar_cedula_ruc", "Alumno", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log(data);
                    if (data.isValid == true) {
                        $("#error_documento").hide();
                        $("#pe_Naturaleza").val(data.return_naturaleza);
                    }
                    else {
                        $("#error_documento").show();
                    }
                },
                error: function (error) {
                }
            });
        };

        function Validar_cedula_ruc_padre() {
            var datos = {
                naturaleza: $("#pe_Naturaleza_padre").val(),
                tipo_documento: $("#IdTipoDocumento_padre").val(),
                cedula_ruc: $("#pe_cedulaRuc_padre").val(),
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Validar_cedula_ruc", "Alumno", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.isValid == true) {
                        $("#error_documento_padre").hide();
                        $("#pe_Naturaleza_padre").val(data.return_naturaleza);
                    }
                    else {
                        $("#error_documento_padre").show();
                    }
                },
                error: function (error) {
                }
            });
        };

        function Validar_cedula_ruc_madre() {
            var datos = {
                naturaleza: $("#pe_Naturaleza_madre").val(),
                tipo_documento: $("#IdTipoDocumento_madre").val(),
                cedula_ruc: $("#pe_cedulaRuc_madre").val(),
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Validar_cedula_ruc", "Alumno", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.isValid == true) {
                        $("#error_documento_madre").hide();
                        $("#pe_Naturaleza_madre").val(data.return_naturaleza);
                    }
                    else {
                        $("#error_documento_madre").show();
                    }
                },
                error: function (error) {
                }
            });
        };

        function validar_se_factura_padre() {
            SeFactura_madre.SetChecked(false);
            //if (SeFactura_madre.GetChecked() == true) {
            //    SeFactura_padre.GetChecked(false);
            //}
        };

        function validar_se_factura_padre() {
            //    SeFactura_padre.GetChecked(false);
            //}
        };

        function nombre_imagen() {
            var datos = {
                IdAlumno: $("#IdAlumno").val()
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("nombre_imagen", "Alumno", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                },
                error: function (error) {
                }
            });
        }
        function actualizar_div() {
            var datos = {
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("actualizar_div", "Alumno", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {


                    //$("#uploadedImage").load();
                    //$("#uploadedImage").attr("src",Url.Content(Core.Erp.Web.Helps.SessionFixed.NombreImagen));

                },
                error: function (error) {
                }
            });
        }

        function actualizar_nombre_completo_padre(Tipo) {
            console.log(Tipo);
            if (Tipo == "N") {
                var apellido = $("#pe_apellido_padre").val();
                var nombre = $("#pe_nombre_padre").val();

                var nombre_completo = apellido + ' ' + nombre;
                $("#pe_nombreCompleto_padre").val(nombre_completo)
            }
            else {
                var razon_social = $("#pe_razonSocial_padre").val();
                $("#pe_nombreCompleto_padre").val(razon_social)
            }
        }

        function actualizar_nombre_completo_madre(Tipo) {
            console.log(Tipo);
            if (Tipo == "N") {
                var apellido = $("#pe_apellido_madre").val();
                var nombre = $("#pe_nombre_madre").val();

                var nombre_completo = apellido + ' ' + nombre;
                $("#pe_nombreCompleto_madre").val(nombre_completo)
            }
            else {
                var razon_social = $("#pe_razonSocial_madre").val();
                $("#pe_nombreCompleto_madre").val(razon_social)
            }
        }

        function mostrar_vehiculo_padre() {
            if (VehiculoPropio_padre.GetValue() == true) {
                $("#vehiculo_padre").show();
            }
            else {
                $("#vehiculo_padre").hide();
            }
        }

        function mostrar_vehiculo_madre() {
            if (VehiculoPropio_madre.GetValue() == true) {
                $("#vehiculo_madre").show();
            }
            else {
                $("#vehiculo_madre").hide();
            }
        }

        function VerFichaSocioEconomica() {
            var location = GetPathServer();
            if ($("#IdAlumno").val() != 0 || $("#IdAlumno").val() != "") {
                var datos = {
                    IdEmpresa: $("#IdEmpresa").val(),
                    IdAlumno: $("#IdAlumno").val()
                }
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("VerFichaSocioEconomica", "Alumno", new { Area = "Academico" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        console.log(data);
                        if(data.SocioEconomico != 0){
                            var win = window.open(location + "/Academico/SocioEconomico/Modificar?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdSocioEconomico=" + data.SocioEconomico+"&IdSocioEconomico=false", '_blank');
                            win.focus();
                        }
                        else{
                            var win = window.open(location + "/Academico/SocioEconomico/Nuevo?IdEmpresa=" +@Core.Web.Helps.SessionFixed.IdEmpresa +"&IdAlumno=" + $("#IdAlumno").val(), '_blank');
                            win.focus();
                        }
                    },
                    error: function (error) {
                    }
                });
            }
            else{
                alert("Debe seleccionar alumno");
            }
        }

        function mostrar_cliente_padre() {
            if (SeFactura_padre.GetValue() == true) {
                
                $("#DatosFacturacionPadre").show();
            }
            else {
                $("#DatosFacturacionPadre").hide();
            }
        }

        function mostrar_cliente_madre() {
            if (SeFactura_madre.GetValue() == true) {
                $("#DatosFacturacionMadre").show();
            }
            else {
                $("#DatosFacturacionMadre").hide();
            }
        }

        function Imprimir() {
            var location = GetPathServer();
            var win = window.open(location +"/Reportes/AcademicoReportes/ACA_001?IdEmpresa="+@Core.Web.Helps.SessionFixed.IdEmpresa+"&IdAlumno="+@Model.IdAlumno, '_blank');
            win.focus();
        }

        function MostrarModalBotones() {
            $("#ModalBotones").modal("show");
        }
    </script>
