@using System.Web.UI.WebControls;
@model Core.Info.Academico.aca_Admision_Info
@{
    ViewBag.Title = "Registro de PreMatricula";
    if (string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdUsuario) || string.IsNullOrEmpty(Core.Web.Helps.SessionFixed.IdEmpresa))
    {
        Response.Redirect("~/Account/Login");
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/ValidacionBotonSubmit.js"></script>
<script>
    var selectedIDs;
    function OnBeginCallback(s, e) {
        //Pass all selected keys to GridView callback action
        e.customArgs["selectedIDs"] = selectedIDs;
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
    }
    function OnSelectionChanged(s, e) {
        s.GetSelectedFieldValues("IdString", GetSelectedFieldValuesCallback);
        s.GetSelectedFieldValues("IdString", GetSelectedFieldValuesCallback_Total);
    }
    function GetSelectedFieldValuesCallback(values) {
        //Capture all selected keys
        selectedIDs = values.join(',');
    }

    var documentoIDs;
    function OnBeginCallback_Doc(s, e) {
        //Pass all selected keys to GridView callback action
        e.customArgs["documentoIDs"] = documentoIDs;
        e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val();
    }
    function OnSelectionChanged_Doc(s, e) {
        s.GetSelectedFieldValues("IdStringDoc", GetSelectedFieldValuesCallback_Doc);
    }
    function GetSelectedFieldValuesCallback_Doc(values) {
        //Capture all selected keys
        documentoIDs = values.join(',');

        var datos = {
            IdComboCurso: IdComboCurso.GetValue(),
            Seleccionados: documentoIDs
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("ActualizarDocumentosSeleccionados", "ProcesarAdmision", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

            },
            error: function (error) {
            }
        });
    }

    function GetSelectedFieldValuesCallback_Total(values) {
        ItemsSeleccionados = values.join(',');

        var datos = {
            IdAnio: IdAnio.GetValue(),
            IdPlantilla: IdPlantilla.GetValue(),
            Seleccionados: ItemsSeleccionados,
            IdTransaccionSession: $("#IdTransaccionSession").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SumarValores", "ProcesarAdmision", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#ValorPlantilla").val(data.ValorPlantilla);
                $("#ValorPlantillaProntoPago").val(data.ValorPlantillaProntoPago);

            },
            error: function (error) {
            }
        });

    }
</script>
@using (Html.BeginForm("Modificar", "ProcesarAdmision", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.HiddenFor(q => q.IdEmpresa, new { @id = "IdEmpresa" })
    @Html.HiddenFor(q => q.IdAdmision, new { @id = "IdAdmision" })
    @Html.HiddenFor(q => q.IdTransaccionSession, new { @id = "IdTransaccionSession" })

    @Html.HiddenFor(q => q.IdTipoCredito_Madre, new { @id = "IdTipoCredito_Madre" })
    @Html.HiddenFor(q => q.IdTipoCredito_Padre, new { @id = "IdTipoCredito_Padre" })
    @Html.HiddenFor(q => q.IdTipoCredito_Representante, new { @id = "IdTipoCredito_Representante" })

    @Html.HiddenFor(q => q.IdAlumno, new { @id = "IdAlumno" })
    @Html.HiddenFor(q => q.IdPersona_Aspirante, new { @id = "IdPersona_Aspirante" })
    @Html.HiddenFor(q => q.IdPersona_Padre, new { @id = "IdPersona_Padre" })
    @Html.HiddenFor(q => q.IdPersona_Madre, new { @id = "IdPersona_Madre" })
    @Html.HiddenFor(q => q.IdPersona_Representante, new { @id = "IdPersona_Representante" })

    @Html.HiddenFor(q => q.IdSucursal, new { @id = "IdSucursal" })
    @Html.HiddenFor(q => q.IdCatalogo_FormaPago, new { @id = "IdCatalogo_FormaPago" })
    @Html.HiddenFor(q => q.IdCatalogoESTPREMAT, new { @id = "IdCatalogoESTPREMAT" })
    @Html.HiddenFor(q => q.IdEmpresa_rol, new { @id = "IdEmpresa_rol" })
    @Html.HiddenFor(q => q.AplicaDescuentoNomina, new { @id = "AplicaDescuentoNomina" })

    @Html.HiddenFor(q => q.IdSede, new { @id = "IdSede" })
    @Html.HiddenFor(q => q.IdJornada, new { @id = "IdJornada" })
    @Html.HiddenFor(q => q.IdNivel, new { @id = "IdNivel" })
    @Html.HiddenFor(q => q.IdCurso, new { @id = "IdCurso" })

    @Html.HiddenFor(q => q.IdCatalogoPAREN_Padre, new { @id = "IdCatalogoPAREN_Padre" })
    @Html.HiddenFor(q => q.IdCatalogoPAREN_Madre, new { @id = "IdCatalogoPAREN_Madre" })
    @*@Html.HiddenFor(q => q.IdCatalogoPAREN_Representante, new { @id = "IdCatalogoPAREN_Representante" })*@

    @Html.HiddenFor(q => q.IdGrupoEtnico_Madre, new { @id = "IdGrupoEtnico_Madre" })
    @Html.HiddenFor(q => q.IdGrupoEtnico_Padre, new { @id = "IdGrupoEtnico_Padre" })
    @Html.HiddenFor(q => q.IdGrupoEtnico_Representante, new { @id = "IdGrupoEtnico_Representante" })

    @Html.HiddenFor(q => q.EsRepresentante_padre, new { @id = "EsRepresentante_padre" })
    @Html.HiddenFor(q => q.EsRepresentante_madre, new { @id = "EsRepresentante_madre" })
    @Html.HiddenFor(q => q.EsRepresentante_otro, new { @id = "EsRepresentante_otro" })
    @Html.HiddenFor(q => q.Representante, new { @id = "Representante" })

    @Html.HiddenFor(q => q.TienePadre, new { @id = "TienePadre" })
    @Html.HiddenFor(q => q.TieneMadre, new { @id = "TieneMadre" })
    if (ViewBag.mensaje != null)
    {
        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    if (ViewBag.MensajeSuccess != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-success alert-dismissible">
                    <h4>
                        <i class="icon fa fa-check"></i> @ViewBag.MensajeSuccess
                    </h4>
                </div>
            </div>
        </div>
    }
    if (ViewBag.mensajeInfo != null)
    {
        <div class="col-md-12">
            <div class="callout callout-info">
                <h4>
                    <i class="icon fa fa-exclamation"></i> <label id="MensajeInfo">@ViewBag.mensajeInfo</label>
                </h4>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="info_persona.Naturaleza_Aspirante">Naturaleza*</label>
                    @Html.DropDownListFor(q => q.Naturaleza_Aspirante, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Naturaleza_Aspirante", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.Naturaleza_Aspirante, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="info_persona.IdTipoDocumento_Aspirante">Tipo documento*</label>
                    @Html.DropDownListFor(q => q.IdTipoDocumento_Aspirante, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento_Aspirante", @readonly = "readonly" })
                    @Html.ValidationMessageFor(q => q.IdTipoDocumento_Aspirante, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="info_persona.Celular_Aspirante">Número documento*</label>
                    @Html.TextBoxFor(q => q.CedulaRuc_Aspirante, new { @class = "form-control", @id = "CedulaRuc_Aspirante" })
                    @Html.ValidationMessageFor(q => q.CedulaRuc_Aspirante, "", new { @class = "text-danger" })
                    <label id="error_documento" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="">Fecha de ingreso</label>
                    <div class="input-group date">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.DevExpress().DateEditFor(q => q.FechaIngreso_Aspirante, settings =>
                           {
                               settings.Name = "FechaIngreso_Aspirante";
                               settings.Properties.UseMaskBehavior = true;
                               settings.Properties.EditFormat = EditFormat.Date;
                               settings.Properties.EditFormatString = "dd/MM/yyyy";
                               settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                               settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                               settings.Properties.AllowMouseWheel = false;
                               settings.ReadOnly = true;
                           }).GetHtml()
                        @Html.ValidationMessageFor(q => q.FechaIngreso_Aspirante, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group">
                    <label for="Apellidos_Aspirante">Apellidos</label>
                    @Html.TextBoxFor(q => q.Apellidos_Aspirante, new { @class = "form-control", @id = "Apellidos_Aspirante" })
                    @Html.ValidationMessageFor(q => q.Apellidos_Aspirante, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    <label for="Nombres_Aspirante">Nombres</label>
                    @Html.TextBoxFor(q => q.Nombres_Aspirante, new { @class = "form-control", @id = "Nombres_Aspirante" })
                    @Html.ValidationMessageFor(q => q.Nombres_Aspirante, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="NombreCompleto_Aspirante">Nombre completo</label>
                    @Html.TextBoxFor(q => q.NombreCompleto_Aspirante, new { @class = "form-control", @id = "NombreCompleto_Aspirante" })
                    @Html.ValidationMessageFor(q => q.NombreCompleto_Aspirante, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div id="Tabs" role="tabpanel">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#tb_admision" aria-controls="general" role="tab" data-toggle="tab"><b>Datos de la admisión</b></a>
            </li>
            <li>
                <a href="#tb_admisioneconomica" aria-controls="admisioneconomica" role="tab" data-toggle="tab"><b>Ficha SocioEconómica</b></a>
            </li>
            <li>
                <a href="#tb_admisiondocumentos" aria-controls="admisiondocumentos" role="tab" data-toggle="tab"><b>Documentos de la admisión</b></a>
            </li>
            <li>
                <a href="#tb_prematricula" aria-controls="prematricula" role="tab" data-toggle="tab"><b>Datos de la prematricula</b></a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content" style="padding-top: 20px">
            <div role="tabpanel" class="tab-pane active" style="margin-left: 2em;" id="tb_admision">
                <h4><b>Datos del aspirante</b></h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Telefonos">Lugar de nacimiento</label>
                                @Html.TextBoxFor(q => q.LugarNacimiento_Aspirante, new { @class = "form-control", @id = "LugarNacimiento_Aspirante" })
                                @Html.ValidationMessageFor(q => q.LugarNacimiento_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="">Fecha de nacimiento</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.FechaNacimiento_Aspirante, settings =>
                            {
                                settings.Name = "FechaNacimiento_Aspirante";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.FechaNacimiento_Aspirante, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Sexo</label>
                                @Html.DropDownListFor(q => q.Sexo_Aspirante, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Sexo_Aspirante" })
                                @Html.ValidationMessageFor(q => q.Sexo_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Tipo de sangre</label>
                                @Html.DropDownListFor(q => q.CodCatalogoSangre_Aspirante, new SelectList(ViewBag.lst_tipo_sangre, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoSangre_Aspirante" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoSangre_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Grupo Etnico</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdGrupoEtnico_Aspirante, settings =>
                               {
                                   settings.Name = "IdGrupoEtnico_Aspirante";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdGrupoEtnico", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomGrupoEtnico", "Grupo Etnico").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdGrupoEtnico";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomGrupoEtnico";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_grupoetnico).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdGrupoEtnico_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Religión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdReligion_Aspirante, settings =>
                               {
                                   settings.Name = "IdReligion_Aspirante";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdReligion";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomReligion";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_religion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdReligion_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano_Aspirante, settings =>
                                {
                                    settings.Name = "AsisteCentroCristiano_Aspirante";
                                    settings.Text = "Asiste a Centro Cristiano";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.AsisteCentroCristiano_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Teléfono</label>
                                @Html.TextBoxFor(q => q.Telefono_Aspirante, new { @class = "form-control", @id = "Telefono_Aspirante" })
                                @Html.ValidationMessageFor(q => q.Telefono_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="pe_Celular_Aspirante">Celular Aspirante</label>
                                @Html.TextBoxFor(q => q.Celular_Aspirante, new { @class = "form-control", @id = "Celular_Aspirante" })
                                @Html.ValidationMessageFor(q => q.Celular_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Correo Aspirante</label>
                                @Html.TextBoxFor(q => q.Correo_Aspirante, new { @class = "form-control", @id = "Correo_Aspirante" })
                                @Html.ValidationMessageFor(q => q.Correo_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Direccion_Aspirante">Dirección</label>
                                @Html.TextAreaFor(q => q.Direccion_Aspirante, new { @class = "form-control", @rows = "2", @id = "Direccion_Aspirante" })
                                @Html.ValidationMessageFor(q => q.Direccion_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">País</label>
                                @Html.Partial("_ComboBoxPartial_Pais", Model)
                                @Html.ValidationMessageFor(q => q.IdPais_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Región</label>
                                @Html.Partial("_ComboBoxPartial_Region", Model)
                                @Html.ValidationMessageFor(q => q.Cod_Region_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Provincia</label>
                                @Html.Partial("_ComboBoxPartial_Provincia", Model)
                                @Html.ValidationMessageFor(q => q.IdProvincia_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Ciudad</label>
                                @Html.Partial("_ComboBoxPartial_Ciudad", Model)
                                @Html.ValidationMessageFor(q => q.IdCiudad_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Parroquia</label>
                                @Html.Partial("_ComboBoxPartial_Parroquia", Model)
                                @Html.ValidationMessageFor(q => q.IdParroquia_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Direccion_Aspirante">Sector</label>
                                @Html.TextBoxFor(q => q.Sector_Aspirante, new { @class = "form-control", @rows = "2", @id = "Sector_Aspirante" })
                                @Html.ValidationMessageFor(q => q.Sector_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.Dificultad_Lectura, settings =>
                                {
                                    settings.Name = "Dificultad_Lectura";
                                    settings.Text = "Dificultad en lectura";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.Dificultad_Lectura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.Dificultad_Escritura, settings =>
                                {
                                    settings.Name = "Dificultad_Escritura";
                                    settings.Text = "Dificultad en escritura";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.Dificultad_Escritura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.Dificultad_Matematicas, settings =>
                                {
                                    settings.Name = "Dificultad_Matematicas";
                                    settings.Text = "Dificultad en matematicas";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.Dificultad_Matematicas, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos Conadis</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Tipo de discapacidad</label>
                                @Html.DropDownListFor(q => q.CodCatalogoCONADIS_Aspirante, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Porcentaje de discapacidad</label>
                                @Html.TextBoxFor(q => q.PorcentajeDiscapacidad_Aspirante, new { @class = "form-control", @id = "PorcentajeDiscapacidad_Aspirante" })
                                @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Número de carnet</label>
                                @Html.TextBoxFor(q => q.NumeroCarnetConadis_Aspirante, new { @class = "form-control", @id = "NumeroCarnetConadis_Aspirante" })
                                @Html.ValidationMessageFor(q => q.NumeroCarnetConadis_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4><b>Datos del padre</b></h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.Naturaleza_Aspirante">Naturaleza*</label>
                                @Html.DropDownListFor(q => q.Naturaleza_Padre, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Naturaleza_Padre" })
                                @Html.ValidationMessageFor(q => q.Naturaleza_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.IdTipoDocumento_Aspirante">Tipo documento*</label>
                                @Html.DropDownListFor(q => q.IdTipoDocumento_Padre, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento_Padre" })
                                @Html.ValidationMessageFor(q => q.IdTipoDocumento_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="info_persona.Celular_Aspirante">Número documento*</label>
                                @Html.TextBoxFor(q => q.CedulaRuc_Padre, new { @class = "form-control", @id = "CedulaRuc_Padre" })
                                @Html.ValidationMessageFor(q => q.CedulaRuc_Padre, "", new { @class = "text-danger" })
                                <label id="error_documento_padre" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EstaFallecido_Padre, settings =>
                                {
                                    settings.Name = "EstaFallecido_Padre";
                                    settings.Text = "Está fallecido";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EstaFallecido_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-offset-1 col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.SeFactura_Padre, settings =>
                                {
                                    settings.Name = "SeFactura_Padre";
                                    settings.Text = "Se factura";
                                    settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){ SeFacturaPadre(); }";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.SeFactura_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Apellidos_Padre">Apellidos</label>
                                @Html.TextBoxFor(q => q.Apellidos_Padre, new { @class = "form-control", @id = "Apellidos_Padre" })
                                @Html.ValidationMessageFor(q => q.Apellidos_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Nombres_Padre">Nombres</label>
                                @Html.TextBoxFor(q => q.Nombres_Padre, new { @class = "form-control", @id = "Nombres_Padre" })
                                @Html.ValidationMessageFor(q => q.Nombres_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="NombreCompleto_Padre">Nombre completo</label>
                                @Html.TextBoxFor(q => q.NombreCompleto_Padre, new { @class = "form-control", @id = "NombreCompleto_Padre" })
                                @Html.ValidationMessageFor(q => q.NombreCompleto_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="RazonSocial_Padre">Razón Social</label>
                                @Html.TextBoxFor(q => q.RazonSocial_Padre, new { @class = "form-control", @id = "RazonSocial_Padre" })
                                @Html.ValidationMessageFor(q => q.RazonSocial_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="">Fecha de nacimiento</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.FechaNacimiento_Padre, settings =>
                            {
                                settings.Name = "FechaNacimiento_Padre";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.FechaNacimiento_Padre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Sexo</label>
                                @Html.DropDownListFor(q => q.Sexo_Padre, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Sexo_Padre" })
                                @Html.ValidationMessageFor(q => q.Sexo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Estado civil</label>
                                @Html.DropDownListFor(q => q.IdEstadoCivil_Padre, new SelectList(ViewBag.lst_estado_civil, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdEstadoCivil_Padre" })
                                @Html.ValidationMessageFor(q => q.IdEstadoCivil_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Teléfono</label>
                                @Html.TextBoxFor(q => q.Telefono_Padre, new { @class = "form-control", @id = "Telefono_Padre" })
                                @Html.ValidationMessageFor(q => q.Telefono_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="pe_Celular_Aspirante">Celular</label>
                                @Html.TextBoxFor(q => q.Celular_Padre, new { @class = "form-control", @id = "Celular_Padre" })
                                @Html.ValidationMessageFor(q => q.Celular_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">País</label>
                                @Html.Partial("_ComboBoxPartial_Pais_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdPais_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Región</label>
                                @Html.Partial("_ComboBoxPartial_Region_padre", Model)
                                @Html.ValidationMessageFor(q => q.Cod_Region_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Provincia</label>
                                @Html.Partial("_ComboBoxPartial_Provincia_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdProvincia_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Ciudad</label>
                                @Html.Partial("_ComboBoxPartial_Ciudad_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdCiudad_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Parroquia</label>
                                @Html.Partial("_ComboBoxPartial_Parroquia_padre", Model)
                                @Html.ValidationMessageFor(q => q.IdParroquia_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Direccion_Aspirante">Sector</label>
                                @Html.TextBoxFor(q => q.Sector_Padre, new { @class = "form-control", @rows = "2", @id = "Sector_Padre" })
                                @Html.ValidationMessageFor(q => q.Sector_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Religión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdReligion_Padre, settings =>
                               {
                                   settings.Name = "IdReligion_Padre";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdReligion";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomReligion";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_religion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdReligion_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano_Padre, settings =>
                                {
                                    settings.Name = "AsisteCentroCristiano_Padre";
                                    settings.Text = "Asiste a Centro Cristiano";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.AsisteCentroCristiano_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Correo_Aspirante</label>
                                @Html.TextBoxFor(q => q.Correo_Padre, new { @class = "form-control", @id = "Correo_Padre" })
                                @Html.ValidationMessageFor(q => q.Correo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.CasaPropia_Padre, settings =>
                            {
                                settings.Name = "CasaPropia_Padre";
                                settings.Text = "Tiene casa propia";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.CasaPropia_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.VehiculoPropio_Padre, settings =>
                            {
                                settings.Name = "VehiculoPropio_Padre";
                                settings.Text = "Tiene vehiculo propio";
                                settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){mostrar_vehiculo_padre();}";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.VehiculoPropio_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="vehiculo_padre">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Marca</label>
                                @Html.TextBoxFor(q => q.Marca_Padre, new { @class = "form-control", @id = "Marca_Padre" })
                                @Html.ValidationMessageFor(q => q.Marca_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Modelo</label>
                                @Html.TextBoxFor(q => q.Modelo_Padre, new { @class = "form-control", @id = "Modelo_Padre" })
                                @Html.ValidationMessageFor(q => q.Modelo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Año</label>
                                @Html.TextBoxFor(q => q.AnioVehiculo_Padre, new { @class = "form-control", @id = "AnioVehiculo_Padre" })
                                @Html.ValidationMessageFor(q => q.AnioVehiculo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Direccion_Aspirante">Dirección</label>
                                @Html.TextAreaFor(q => q.Direccion_Padre, new { @class = "form-control", @rows = "2", @id = "Direccion_Padre" })
                                @Html.ValidationMessageFor(q => q.Direccion_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="DatosFacturacionPadre">
                    <div class="col-md-12">
                        <h4>Datos de Cliente</h4><hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Idtipo_cliente">Tipo cliente</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.Idtipo_cliente_Padre, settings =>
                                {
                                    settings.Name = "Idtipo_cliente_Padre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("Idtipo_cliente", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion_tip_cliente", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                                    //Campo ID
                                    settings.Properties.ValueField = "Idtipo_cliente";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion_tip_cliente";
                                    //Boton para seleccionar ningun registro
                                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                    //settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e,){get_info_tipo_cliente()}";
                                    settings.Properties.AllowNull = true;

                                }).BindList(ViewBag.lst_clientetipo).GetHtml()
                                        @Html.ValidationMessageFor(q => q.Idtipo_cliente_Padre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="IdCiudad">Ciudad*</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.IdCiudad_Padre_Fact, settings =>
                               {
                                   settings.Name = "IdCiudad_Padre_Fact";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdCiudad", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("Descripcion_Ciudad", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdCiudad";
                                   settings.Properties.ValueType = typeof(string);
                                   settings.Properties.TextField = "Descripcion_Ciudad";
                                   //Boton para seleccionar ningun registro
                                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                   settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { IdParroquia_Padre_Fact.PerformCallback(); }";
                               }).BindList(ViewBag.lst_ciudad_factura).GetHtml()
                                        @Html.ValidationMessageFor(q => q.IdCiudad_Padre_Fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="parroquia">Parroquia*</label>
                                        @Html.Partial("_cmb_parroquia_padre", Model)
                                        @Html.ValidationMessageFor(q => q.IdParroquia_Padre_Fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos de trabajo</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Empresa donde trabaja</label>
                                @Html.TextBoxFor(q => q.EmpresaTrabajo_Padre, new { @class = "form-control", @id = "EmpresaTrabajo_Padre" })
                                @Html.ValidationMessageFor(q => q.EmpresaTrabajo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Instrucción</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaInst_Padre, new SelectList(ViewBag.lst_instruccion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaInst_Padre" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaInst_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Profesión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdProfesion_Padre, settings =>
                                {
                                    settings.Name = "IdProfesion_Padre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("IdProfesion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion", "Profesión").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                    //Campo ID
                                    settings.Properties.ValueField = "IdProfesion";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion";
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                }).BindList(ViewBag.lst_profesion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdProfesion_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Cargo</label>
                                @Html.TextBoxFor(q => q.CargoTrabajo_Padre, new { @class = "form-control", @id = "CargoTrabajo_Padre" })
                                @Html.ValidationMessageFor(q => q.CargoTrabajo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Teléfono</label>
                                @Html.TextBoxFor(q => q.TelefonoTrabajo_Padre, new { @class = "form-control", @id = "TelefonoTrabajo_Padre" })
                                @Html.ValidationMessageFor(q => q.TelefonoTrabajo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Años de servicio</label>
                                @Html.TextBoxFor(q => q.AniosServicio_Padre, new { @class = "form-control", @id = "AniosServicio_Padre" })
                                @Html.ValidationMessageFor(q => q.AniosServicio_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Ingreso mensual</label>
                                @Html.TextBoxFor(q => q.IngresoMensual_Padre, new { @class = "form-control", @id = "IngresoMensual_Padre" })
                                @Html.ValidationMessageFor(q => q.IngresoMensual_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Dirección</label>
                                @Html.TextBoxFor(q => q.DireccionTrabajo_Padre, new { @class = "form-control", @id = "DireccionTrabajo_Padre" })
                                @Html.ValidationMessageFor(q => q.DireccionTrabajo_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos Conadis</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Tipo de discapacidad</label>
                                @Html.DropDownListFor(q => q.CodCatalogoCONADIS_Padre, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS_Padre" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Porcentaje de discapacidad</label>
                                @Html.TextBoxFor(q => q.PorcentajeDiscapacidad_Padre, new { @class = "form-control", @id = "PorcentajeDiscapacidad_Padre" })
                                @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Número de carnet</label>
                                @Html.TextBoxFor(q => q.NumeroCarnetConadis_Padre, new { @class = "form-control", @id = "NumeroCarnetConadis_Padre" })
                                @Html.ValidationMessageFor(q => q.NumeroCarnetConadis_Padre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4><b>Datos de la madre</b></h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.Naturaleza_Aspirante">Naturaleza*</label>
                                @Html.DropDownListFor(q => q.Naturaleza_Madre, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Naturaleza_Madre" })
                                @Html.ValidationMessageFor(q => q.Naturaleza_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="info_persona.IdTipoDocumento_Aspirante">Tipo documento*</label>
                                @Html.DropDownListFor(q => q.IdTipoDocumento_Madre, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento_Madre" })
                                @Html.ValidationMessageFor(q => q.IdTipoDocumento_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="info_persona.Celular_Aspirante">Número documento*</label>
                                @Html.TextBoxFor(q => q.CedulaRuc_Madre, new { @class = "form-control", @id = "CedulaRuc_Madre" })
                                @Html.ValidationMessageFor(q => q.CedulaRuc_Madre, "", new { @class = "text-danger" })
                                <label id="error_documento_madre" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EstaFallecido_Madre, settings =>
                                {
                                    settings.Name = "EstaFallecido_Madre";
                                    settings.Text = "Está fallecida";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EstaFallecido_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-offset-1 col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.SeFactura_Madre, settings =>
                        {
                            settings.Name = "SeFactura_Madre";
                            settings.Text = "Se factura";
                            settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){ SeFacturaMadre(); }";
                        }).GetHtml()
                                @Html.ValidationMessageFor(q => q.SeFactura_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Apellidos_Madre">Apellidos</label>
                                @Html.TextBoxFor(q => q.Apellidos_Madre, new { @class = "form-control", @id = "Apellidos_Madre" })
                                @Html.ValidationMessageFor(q => q.Apellidos_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Nombres_Madre">Nombres</label>
                                @Html.TextBoxFor(q => q.Nombres_Madre, new { @class = "form-control", @id = "Nombres_Madre" })
                                @Html.ValidationMessageFor(q => q.Nombres_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="NombreCompleto_Madre">Nombre completo</label>
                                @Html.TextBoxFor(q => q.NombreCompleto_Madre, new { @class = "form-control", @id = "NombreCompleto_Madre" })
                                @Html.ValidationMessageFor(q => q.NombreCompleto_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="RazonSocial_Madre">Razón Social</label>
                                @Html.TextBoxFor(q => q.RazonSocial_Madre, new { @class = "form-control", @id = "RazonSocial_Madre" })
                                @Html.ValidationMessageFor(q => q.RazonSocial_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="">Fecha de nacimiento</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.FechaNacimiento_Madre, settings =>
                            {
                                settings.Name = "FechaNacimiento_Madre";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.FechaNacimiento_Madre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Sexo</label>
                                @Html.DropDownListFor(q => q.Sexo_Madre, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Sexo_Madre" })
                                @Html.ValidationMessageFor(q => q.Sexo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Estado civil</label>
                                @Html.DropDownListFor(q => q.IdEstadoCivil_Madre, new SelectList(ViewBag.lst_estado_civil, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdEstadoCivil_Madre" })
                                @Html.ValidationMessageFor(q => q.IdEstadoCivil_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Teléfono</label>
                                @Html.TextBoxFor(q => q.Telefono_Madre, new { @class = "form-control", @id = "Telefono_Madre" })
                                @Html.ValidationMessageFor(q => q.Telefono_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="pe_Celular_Aspirante">Celular</label>
                                @Html.TextBoxFor(q => q.Celular_Madre, new { @class = "form-control", @id = "Celular_Madre" })
                                @Html.ValidationMessageFor(q => q.Celular_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">País</label>
                                @Html.Partial("_ComboBoxPartial_Pais_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdPais_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Región</label>
                                @Html.Partial("_ComboBoxPartial_Region_madre", Model)
                                @Html.ValidationMessageFor(q => q.Cod_Region_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Provincia</label>
                                @Html.Partial("_ComboBoxPartial_Provincia_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdProvincia_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Ciudad</label>
                                @Html.Partial("_ComboBoxPartial_Ciudad_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdCiudad_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Pais">Parroquia</label>
                                @Html.Partial("_ComboBoxPartial_Parroquia_madre", Model)
                                @Html.ValidationMessageFor(q => q.IdParroquia_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Direccion_Aspirante">Sector</label>
                                @Html.TextBoxFor(q => q.Sector_Madre, new { @class = "form-control", @rows = "2", @id = "Sector_Madre" })
                                @Html.ValidationMessageFor(q => q.Sector_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Religión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdReligion_Madre, settings =>
                               {
                                   settings.Name = "IdReligion_Madre";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdReligion";
                                   settings.Properties.ValueType = typeof(int);
                                   settings.Properties.TextField = "NomReligion";
                                   settings.Properties.NullText = "== Seleccione ==";
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                               }).BindList(ViewBag.lst_religion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdReligion_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano_Madre, settings =>
                                {
                                    settings.Name = "AsisteCentroCristiano_Madre";
                                    settings.Text = "Asiste a Centro Cristiano";
                                }).GetHtml()
                                @Html.ValidationMessageFor(q => q.AsisteCentroCristiano_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Correo </label>
                                @Html.TextBoxFor(q => q.Correo_Madre, new { @class = "form-control", @id = "Correo_Madre" })
                                @Html.ValidationMessageFor(q => q.Correo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.CasaPropia_Madre, settings =>
                            {
                                settings.Name = "CasaPropia_Madre";
                                settings.Text = "Tiene casa propia";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.CasaPropia_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.VehiculoPropio_Madre, settings =>
                            {
                                settings.Name = "VehiculoPropio_Madre";
                                settings.Text = "Tiene vehiculo propio";
                                settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){mostrar_vehiculo_madre();}";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.VehiculoPropio_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="vehiculo_madre">
                    <div class="col-md-12">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Marca</label>
                                @Html.TextBoxFor(q => q.Marca_Madre, new { @class = "form-control", @id = "Marca_Madre" })
                                @Html.ValidationMessageFor(q => q.Marca_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Modelo</label>
                                @Html.TextBoxFor(q => q.Modelo_Madre, new { @class = "form-control", @id = "Modelo_Madre" })
                                @Html.ValidationMessageFor(q => q.Modelo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Año</label>
                                @Html.TextBoxFor(q => q.AnioVehiculo_Madre, new { @class = "form-control", @id = "AnioVehiculo_Madre" })
                                @Html.ValidationMessageFor(q => q.AnioVehiculo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Direccion_Aspirante">Dirección</label>
                                @Html.TextAreaFor(q => q.Direccion_Madre, new { @class = "form-control", @rows = "2", @id = "Direccion_Madre" })
                                @Html.ValidationMessageFor(q => q.Direccion_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="DatosFacturacionMadre">
                    <div class="col-md-12">
                        <h4>Datos de Cliente</h4><hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Idtipo_cliente">Tipo cliente</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.Idtipo_cliente_Madre, settings =>
                                {
                                    settings.Name = "Idtipo_cliente_Madre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("Idtipo_cliente", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion_tip_cliente", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                                    //Campo ID
                                    settings.Properties.ValueField = "Idtipo_cliente";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion_tip_cliente";
                                    //Boton para seleccionar ningun registro
                                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                    //settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e,){get_info_tipo_cliente()}";
                                    settings.Properties.AllowNull = true;

                                }).BindList(ViewBag.lst_clientetipo).GetHtml()
                                        @Html.ValidationMessageFor(q => q.Idtipo_cliente_Madre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="IdCiudad">Ciudad*</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.IdCiudad_Madre_Fact, settings =>
                               {
                                   settings.Name = "IdCiudad_Madre_Fact";
                                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                   settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                   settings.Properties.Columns.Add("IdCiudad", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                   settings.Properties.Columns.Add("Descripcion_Ciudad", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                   //Campo ID
                                   settings.Properties.ValueField = "IdCiudad";
                                   settings.Properties.ValueType = typeof(string);
                                   settings.Properties.TextField = "Descripcion_Ciudad";
                                   //Boton para seleccionar ningun registro
                                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                   settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { IdParroquia_Madre_Fact.PerformCallback(); }";
                               }).BindList(ViewBag.lst_ciudad_factura).GetHtml()
                                        @Html.ValidationMessageFor(q => q.IdCiudad_Madre_Fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="parroquia">Parroquia*</label>
                                        @Html.Partial("_cmb_parroquia_madre", Model)
                                        @Html.ValidationMessageFor(q => q.IdParroquia_Madre_Fact, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos de trabajo</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Empresa donde trabaja</label>
                                @Html.TextBoxFor(q => q.EmpresaTrabajo_Madre, new { @class = "form-control", @id = "EmpresaTrabajo_Madre" })
                                @Html.ValidationMessageFor(q => q.EmpresaTrabajo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Instrucción</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaInst_Madre, new SelectList(ViewBag.lst_instruccion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaInst_Madre" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaInst_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEstadoCivil">Profesión</label>
                                @Html.DevExpress().ComboBoxFor(q => q.IdProfesion_Madre, settings =>
                                {
                                    settings.Name = "IdProfesion_Madre";
                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                    settings.Properties.Columns.Add("IdProfesion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                    settings.Properties.Columns.Add("Descripcion", "Profesión").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                    //Campo ID
                                    settings.Properties.ValueField = "IdProfesion";
                                    settings.Properties.ValueType = typeof(int);
                                    settings.Properties.TextField = "Descripcion";
                                    settings.Properties.NullText = "== Seleccione ==";
                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                }).BindList(ViewBag.lst_profesion).GetHtml()
                                @Html.ValidationMessageFor(q => q.IdProfesion_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Cargo</label>
                                @Html.TextBoxFor(q => q.CargoTrabajo_Madre, new { @class = "form-control", @id = "CargoTrabajo_Madre" })
                                @Html.ValidationMessageFor(q => q.CargoTrabajo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Teléfono</label>
                                @Html.TextBoxFor(q => q.TelefonoTrabajo_Madre, new { @class = "form-control", @id = "TelefonoTrabajo_Madre" })
                                @Html.ValidationMessageFor(q => q.TelefonoTrabajo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Años de servicio</label>
                                @Html.TextBoxFor(q => q.AniosServicio_Madre, new { @class = "form-control", @id = "AniosServicio_Madre" })
                                @Html.ValidationMessageFor(q => q.AniosServicio_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Ingreso mensual</label>
                                @Html.TextBoxFor(q => q.IngresoMensual_Madre, new { @class = "form-control", @id = "IngresoMensual_Madre" })
                                @Html.ValidationMessageFor(q => q.IngresoMensual_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="Correo_Aspirante">Dirección</label>
                                @Html.TextBoxFor(q => q.DireccionTrabajo_Madre, new { @class = "form-control", @id = "DireccionTrabajo_Madre" })
                                @Html.ValidationMessageFor(q => q.DireccionTrabajo_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4>Datos Conadis</h4><hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="Sexo_Aspirante">Tipo de discapacidad</label>
                                @Html.DropDownListFor(q => q.CodCatalogoCONADIS_Madre, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS_Madre" })
                                @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Porcentaje de discapacidad</label>
                                @Html.TextBoxFor(q => q.PorcentajeDiscapacidad_Madre, new { @class = "form-control", @id = "PorcentajeDiscapacidad_Madre" })
                                @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Telefonos">Número de carnet</label>
                                @Html.TextBoxFor(q => q.NumeroCarnetConadis_Madre, new { @class = "form-control", @id = "NumeroCarnetConadis_Madre" })
                                @Html.ValidationMessageFor(q => q.NumeroCarnetConadis_Madre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <h4><b>Datos del representante</b></h4><hr />
                
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label id="RepresentanteLabel"> </label>
                            </div>
                        </div>
                        <div class="col-md-10">
                            <div class="form-group">
                                <button type="button" class="btn btn-success" id="BtnPadreRep" onclick="PadreRepresentante();" hidden>Padre</button>
                                <button type="button" class="btn btn-info" id="BtnMadreRep" onclick="MadreRepresentante();" hidden>Madre</button>
                                <button type="button" class="btn btn-default" id="BtnOtroRep" onclick="OtroRepresentante();">Otro</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="DatosRepresentante" hidden>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="info_persona.Naturaleza_Aspirante">Naturaleza*</label>
                                        @Html.DropDownListFor(q => q.Naturaleza_Representante, new SelectList(ViewBag.lst_tipo_naturaleza, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Naturaleza_Representante" })
                                        @Html.ValidationMessageFor(q => q.Naturaleza_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="info_persona.IdTipoDocumento_Aspirante">Tipo documento*</label>
                                        @Html.DropDownListFor(q => q.IdTipoDocumento_Representante, new SelectList(ViewBag.lst_tipo_doc, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdTipoDocumento_Representante" })
                                        @Html.ValidationMessageFor(q => q.IdTipoDocumento_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="info_persona.Celular_Aspirante">Número documento*</label>
                                        @Html.TextBoxFor(q => q.CedulaRuc_Representante, new { @class = "form-control", @id = "CedulaRuc_Representante" })
                                        @Html.ValidationMessageFor(q => q.CedulaRuc_Representante, "", new { @class = "text-danger" })
                                        <label id="error_documento_Representante" style="color:red" hidden> <i class="icon fa fa-warning"></i> Número de identificación inválida</label>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="Parent">Parentezco*</label>
                                        @Html.DropDownListFor(q => q.IdCatalogoPAREN_Representante, new SelectList(ViewBag.lst_parentesco, "IdCatalogo", "NomCatalogo"), new { @class = "form-control", @id = "IdCatalogoPAREN" })
                                        @Html.ValidationMessageFor(q => q.IdCatalogoPAREN_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="bo_EsBodega"></label>
                                        @Html.DevExpress().CheckBoxFor(q => q.SeFactura_Representante, settings =>
                                {
                                    settings.Name = "SeFactura_Representante";
                                    settings.Text = "Se factura";
                                    settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){ SeFacturaRepresentante(); }";
                                }).GetHtml()
                                        @Html.ValidationMessageFor(q => q.SeFactura_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <label for="Apellidos_Representante">Apellidos</label>
                                        @Html.TextBoxFor(q => q.Apellidos_Representante, new { @class = "form-control", @id = "Apellidos_Representante" })
                                        @Html.ValidationMessageFor(q => q.Apellidos_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-5">
                                    <div class="form-group">
                                        <label for="Nombres_Representante">Nombres</label>
                                        @Html.TextBoxFor(q => q.Nombres_Representante, new { @class = "form-control", @id = "Nombres_Representante" })
                                        @Html.ValidationMessageFor(q => q.Nombres_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="NombreCompleto_Representante">Nombre completo</label>
                                        @Html.TextBoxFor(q => q.NombreCompleto_Representante, new { @class = "form-control", @id = "NombreCompleto_Representante" })
                                        @Html.ValidationMessageFor(q => q.NombreCompleto_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="RazonSocial_Representante">Razón Social</label>
                                        @Html.TextBoxFor(q => q.RazonSocial_Representante, new { @class = "form-control", @id = "RazonSocial_Representante" })
                                        @Html.ValidationMessageFor(q => q.RazonSocial_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="">Fecha de nacimiento</label>
                                        <div class="input-group date">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            @Html.DevExpress().DateEditFor(q => q.FechaNacimiento_Representante, settings =>
                                            {
                                                settings.Name = "FechaNacimiento_Representante";
                                                settings.Properties.UseMaskBehavior = true;
                                                settings.Properties.EditFormat = EditFormat.Date;
                                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                settings.Properties.AllowMouseWheel = false;
                                            }).GetHtml()
                                            @Html.ValidationMessageFor(q => q.FechaNacimiento_Representante, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="Sexo_Aspirante">Sexo</label>
                                        @Html.DropDownListFor(q => q.Sexo_Representante, new SelectList(ViewBag.lst_sexo, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "Sexo_Representante" })
                                        @Html.ValidationMessageFor(q => q.Sexo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="IdEstadoCivil">Estado civil</label>
                                        @Html.DropDownListFor(q => q.IdEstadoCivil_Representante, new SelectList(ViewBag.lst_estado_civil, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "IdEstadoCivil_Representante" })
                                        @Html.ValidationMessageFor(q => q.IdEstadoCivil_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="Telefonos">Teléfono</label>
                                        @Html.TextBoxFor(q => q.Telefono_Representante, new { @class = "form-control", @id = "Telefono_Representante" })
                                        @Html.ValidationMessageFor(q => q.Telefono_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="pe_Celular_Aspirante">Celular</label>
                                        @Html.TextBoxFor(q => q.Celular_Representante, new { @class = "form-control", @id = "Celular_Representante" })
                                        @Html.ValidationMessageFor(q => q.Celular_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Pais">País</label>
                                        @Html.Partial("_ComboBoxPartial_Pais_Representante", Model)
                                        @Html.ValidationMessageFor(q => q.IdPais_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Pais">Región</label>
                                        @Html.Partial("_ComboBoxPartial_Region_Representante", Model)
                                        @Html.ValidationMessageFor(q => q.Cod_Region_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Pais">Provincia</label>
                                        @Html.Partial("_ComboBoxPartial_Provincia_Representante", Model)
                                        @Html.ValidationMessageFor(q => q.IdProvincia_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Pais">Ciudad</label>
                                        @Html.Partial("_ComboBoxPartial_Ciudad_Representante", Model)
                                        @Html.ValidationMessageFor(q => q.IdCiudad_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Pais">Parroquia</label>
                                        @Html.Partial("_ComboBoxPartial_Parroquia_Representante", Model)
                                        @Html.ValidationMessageFor(q => q.IdParroquia_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Direccion_Aspirante">Sector</label>
                                        @Html.TextBoxFor(q => q.Sector_Representante, new { @class = "form-control", @rows = "2", @id = "Sector_Representante" })
                                        @Html.ValidationMessageFor(q => q.Sector_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="IdEmpresa">Religión</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.IdReligion_Representante, settings =>
                                        {
                                            settings.Name = "IdReligion_Representante";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                            settings.Properties.Columns.Add("IdReligion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                            settings.Properties.Columns.Add("NomReligion", "Religion").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                            //Campo ID
                                            settings.Properties.ValueField = "IdReligion";
                                            settings.Properties.ValueType = typeof(int);
                                            settings.Properties.TextField = "NomReligion";
                                            settings.Properties.NullText = "== Seleccione ==";
                                            settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                        }).BindList(ViewBag.lst_religion).GetHtml()
                                        @Html.ValidationMessageFor(q => q.IdReligion_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="bo_EsBodega"></label>
                                        @Html.DevExpress().CheckBoxFor(q => q.AsisteCentroCristiano_Representante, settings =>
                            {
                                settings.Name = "AsisteCentroCristiano_Representante";
                                settings.Text = "Asiste a Centro Cristiano";
                            }).GetHtml()
                                        @Html.ValidationMessageFor(q => q.AsisteCentroCristiano_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Correo </label>
                                        @Html.TextBoxFor(q => q.Correo_Representante, new { @class = "form-control", @id = "Correo_Representante" })
                                        @Html.ValidationMessageFor(q => q.Correo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="bo_EsBodega"></label>
                                        @Html.DevExpress().CheckBoxFor(q => q.CasaPropia_Representante, settings =>
                                        {
                                            settings.Name = "CasaPropia_Representante";
                                            settings.Text = "Tiene casa propia";
                                        }).GetHtml()
                                        @Html.ValidationMessageFor(q => q.CasaPropia_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="bo_EsBodega"></label>
                                        @Html.DevExpress().CheckBoxFor(q => q.VehiculoPropio_Representante, settings =>
                                        {
                                            settings.Name = "VehiculoPropio_Representante";
                                            settings.Text = "Tiene vehiculo propio";
                                            settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){mostrar_vehiculo_representante();}";
                                        }).GetHtml()
                                        @Html.ValidationMessageFor(q => q.VehiculoPropio_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="vehiculo_representante">
                            <div class="col-md-12">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Marca</label>
                                        @Html.TextBoxFor(q => q.Marca_Representante, new { @class = "form-control", @id = "Marca_Representante" })
                                        @Html.ValidationMessageFor(q => q.Marca_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Modelo</label>
                                        @Html.TextBoxFor(q => q.Modelo_Representante, new { @class = "form-control", @id = "Modelo_Representante" })
                                        @Html.ValidationMessageFor(q => q.Modelo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Año</label>
                                        @Html.TextBoxFor(q => q.AnioVehiculo_Representante, new { @class = "form-control", @id = "AnioVehiculo_Representante" })
                                        @Html.ValidationMessageFor(q => q.AnioVehiculo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="Direccion_Aspirante">Dirección</label>
                                        @Html.TextAreaFor(q => q.Direccion_Representante, new { @class = "form-control", @rows = "2", @id = "Direccion_Representante" })
                                        @Html.ValidationMessageFor(q => q.Direccion_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="DatosFacturacionRepresentante">
                            <div class="col-md-12">
                                <h4>Datos de Cliente</h4><hr />
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="Idtipo_cliente">Tipo cliente</label>
                                                @Html.DevExpress().ComboBoxFor(q => q.Idtipo_cliente_Representante, settings =>
                                                {
                                                    settings.Name = "Idtipo_cliente_Representante";
                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                                    settings.Properties.Columns.Add("Idtipo_cliente", "Código").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                                    settings.Properties.Columns.Add("Descripcion_tip_cliente", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(50);
                                                    //Campo ID
                                                    settings.Properties.ValueField = "Idtipo_cliente";
                                                    settings.Properties.ValueType = typeof(int);
                                                    settings.Properties.TextField = "Descripcion_tip_cliente";
                                                    //Boton para seleccionar ningun registro
                                                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                                                    settings.Properties.NullText = "== Seleccione ==";
                                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                                    //settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e,){get_info_tipo_cliente()}";
                                                    settings.Properties.AllowNull = true;

                                                }).BindList(ViewBag.lst_clientetipo).GetHtml()
                                                @Html.ValidationMessageFor(q => q.Idtipo_cliente_Representante, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="IdCiudad">Ciudad*</label>
                                                @Html.DevExpress().ComboBoxFor(q => q.IdCiudad_Representante_Fact, settings =>
                                                {
                                                    settings.Name = "IdCiudad_Representante_Fact";
                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                    settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                                    settings.Properties.Columns.Add("IdCiudad", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                                    settings.Properties.Columns.Add("Descripcion_Ciudad", "Descripción").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                                    //Campo ID
                                                    settings.Properties.ValueField = "IdCiudad";
                                                    settings.Properties.ValueType = typeof(string);
                                                    settings.Properties.TextField = "Descripcion_Ciudad";
                                                    //Boton para seleccionar ningun registro
                                                    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Always;
                                                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { IdParroquia_Representante_Fact.PerformCallback(); }";
                                                }).BindList(ViewBag.lst_ciudad_factura).GetHtml()
                                                @Html.ValidationMessageFor(q => q.IdCiudad_Representante_Fact, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="parroquia">Parroquia*</label>
                                                @Html.Partial("_cmb_parroquia_representante", Model)
                                                @Html.ValidationMessageFor(q => q.IdParroquia_Representante_Fact, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <h4>Datos de trabajo</h4><hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Empresa donde trabaja</label>
                                        @Html.TextBoxFor(q => q.EmpresaTrabajo_Representante, new { @class = "form-control", @id = "EmpresaTrabajo_Representante" })
                                        @Html.ValidationMessageFor(q => q.EmpresaTrabajo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="IdEstadoCivil">Instrucción</label>
                                        @Html.DropDownListFor(q => q.IdCatalogoFichaInst_Representante, new SelectList(ViewBag.lst_instruccion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaInst_Representante" })
                                        @Html.ValidationMessageFor(q => q.IdCatalogoFichaInst_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="IdEstadoCivil">Profesión</label>
                                        @Html.DevExpress().ComboBoxFor(q => q.IdProfesion_Representante, settings =>
                            {
                                settings.Name = "IdProfesion_Representante";
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.DisplayFormatString = "[{0}] - {1}";
                                settings.Properties.Columns.Add("IdProfesion", "ID").Width = System.Web.UI.WebControls.Unit.Percentage(20);
                                settings.Properties.Columns.Add("Descripcion", "Profesión").Width = System.Web.UI.WebControls.Unit.Percentage(80);
                                //Campo ID
                                settings.Properties.ValueField = "IdProfesion";
                                settings.Properties.ValueType = typeof(int);
                                settings.Properties.TextField = "Descripcion";
                                settings.Properties.NullText = "== Seleccione ==";
                                settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                            }).BindList(ViewBag.lst_profesion).GetHtml()
                                        @Html.ValidationMessageFor(q => q.IdProfesion_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Cargo</label>
                                        @Html.TextBoxFor(q => q.CargoTrabajo_Representante, new { @class = "form-control", @id = "CargoTrabajo_Representante" })
                                        @Html.ValidationMessageFor(q => q.CargoTrabajo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Teléfono</label>
                                        @Html.TextBoxFor(q => q.TelefonoTrabajo_Representante, new { @class = "form-control", @id = "TelefonoTrabajo_Representante" })
                                        @Html.ValidationMessageFor(q => q.TelefonoTrabajo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Años de servicio</label>
                                        @Html.TextBoxFor(q => q.AniosServicio_Representante, new { @class = "form-control", @id = "AniosServicio_Representante" })
                                        @Html.ValidationMessageFor(q => q.AniosServicio_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Ingreso mensual</label>
                                        @Html.TextBoxFor(q => q.IngresoMensual_Representante, new { @class = "form-control", @id = "IngresoMensual_Representante" })
                                        @Html.ValidationMessageFor(q => q.IngresoMensual_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="Correo_Aspirante">Dirección</label>
                                        @Html.TextBoxFor(q => q.DireccionTrabajo_Representante, new { @class = "form-control", @id = "DireccionTrabajo_Representante" })
                                        @Html.ValidationMessageFor(q => q.DireccionTrabajo_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <h4>Datos Conadis</h4><hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="Sexo_Aspirante">Tipo de discapacidad</label>
                                        @Html.DropDownListFor(q => q.CodCatalogoCONADIS_Representante, new SelectList(ViewBag.lst_tipo_discapacidad, "CodCatalogo", "ca_descripcion"), new { @class = "form-control", @id = "CodCatalogoCONADIS_Representante" })
                                        @Html.ValidationMessageFor(q => q.CodCatalogoCONADIS_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="Telefonos">Porcentaje de discapacidad</label>
                                        @Html.TextBoxFor(q => q.PorcentajeDiscapacidad_Representante, new { @class = "form-control", @id = "PorcentajeDiscapacidad_Representante" })
                                        @Html.ValidationMessageFor(q => q.PorcentajeDiscapacidad_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="Telefonos">Número de carnet</label>
                                        @Html.TextBoxFor(q => q.NumeroCarnetConadis_Representante, new { @class = "form-control", @id = "NumeroCarnetConadis_Representante" })
                                        @Html.ValidationMessageFor(q => q.NumeroCarnetConadis_Representante, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_admisioneconomica">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">El alumno vive con</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaVive_Aspirante, new SelectList(ViewBag.lst_vivecon, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaVive_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaVive_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">Tenencia de vivienda*</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaTipoViv_Aspirante, new SelectList(ViewBag.lst_vivienda, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaTipoViv_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaTipoViv_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">Tipo de vivienda*</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaViv_Aspirante, new SelectList(ViewBag.lst_tipo_vivienda, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaViv_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaViv_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">Agua*</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaAgua_Aspirante, new SelectList(ViewBag.lst_agua, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaAgua_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaAgua_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.TieneElectricidad_Aspirante, settings =>
                            {
                                settings.Name = "TieneElectricidad_Aspirante";
                                settings.Text = "Luz electrica";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.TieneElectricidad_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="bo_EsBodega"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.TieneHermanos_Aspirante, settings =>
                            {
                                settings.Name = "TieneHermanos_Aspirante";
                                settings.Text = "Tiene hermanos en la institución";
                                settings.Properties.ClientSideEvents.CheckedChanged = "function(s,e){mostrar_div();}";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.TieneHermanos_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2" id="cant_hermanos" hidden>
                            <div class="form-group">
                                <label for="IdEmpresa">Cantidad de hermanos</label>
                                @Html.TextBoxFor(q => q.CantidadHermanos, new { @class = "form-control", @id = "CantidadHermanos" })
                                @Html.ValidationMessageFor(m => m.CantidadHermanos, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Sueldo padre*</label>
                                @Html.TextBoxFor(q => q.SueldoPadre, new { @class = "form-control", @id = "SueldoPadre" })
                                @Html.ValidationMessageFor(m => m.SueldoPadre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Sueldo madre*</label>
                                @Html.TextBoxFor(q => q.SueldoMadre, new { @class = "form-control", @id = "SueldoMadre" })
                                @Html.ValidationMessageFor(m => m.SueldoMadre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Otros ingresos Padre*</label>
                                @Html.TextBoxFor(q => q.OtroIngresoPadre, new { @class = "form-control", @id = "OtroIngresoPadre" })
                                @Html.ValidationMessageFor(m => m.OtroIngresoPadre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Otros ingresos Madre*</label>
                                @Html.TextBoxFor(q => q.OtroIngresoMadre, new { @class = "form-control", @id = "OtroIngresoMadre" })
                                @Html.ValidationMessageFor(m => m.OtroIngresoMadre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Gastos alimentacion*</label>
                                @Html.TextBoxFor(q => q.GastoAlimentacion, new { @class = "form-control", @id = "GastoAlimentacion" })
                                @Html.ValidationMessageFor(m => m.GastoAlimentacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Gastos educación*</label>
                                @Html.TextBoxFor(q => q.GastoEducacion, new { @class = "form-control", @id = "GastoEducacion" })
                                @Html.ValidationMessageFor(m => m.GastoEducacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Gastos servicios basico*</label>
                                @Html.TextBoxFor(q => q.GastoServicioBasico, new { @class = "form-control", @id = "GastoServicioBasico" })
                                @Html.ValidationMessageFor(m => m.GastoServicioBasico, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Gastos salud*</label>
                                @Html.TextBoxFor(q => q.GastoSalud, new { @class = "form-control", @id = "GastoSalud" })
                                @Html.ValidationMessageFor(m => m.GastoSalud, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Gastos arriendo*</label>
                                @Html.TextBoxFor(q => q.GastoArriendo, new { @class = "form-control", @id = "GastoArriendo" })
                                @Html.ValidationMessageFor(m => m.GastoArriendo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Gastos préstamo*</label>
                                @Html.TextBoxFor(q => q.GastoPrestamo, new { @class = "form-control", @id = "GastoPrestamo" })
                                @Html.ValidationMessageFor(m => m.GastoPrestamo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Otros gastos*</label>
                                @Html.TextBoxFor(q => q.OtroGasto, new { @class = "form-control", @id = "OtroGasto" })
                                @Html.ValidationMessageFor(m => m.OtroGasto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Total de ingresos*</label>
                                @Html.TextBoxFor(q => q.TotalIngresos, new { @class = "form-control", @id = "TotalIngresos", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.TotalIngresos, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Total de gastos*</label>
                                @Html.TextBoxFor(q => q.TotalEgresos, new { @class = "form-control", @id = "TotalEgresos", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.TotalEgresos, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Saldo*</label>
                                @Html.TextBoxFor(q => q.Saldo, new { @class = "form-control", @id = "Saldo", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.Saldo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">¿Qué le impulsa a ingresar al Liceo Cristiano de Guayaquil?*</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaMotivo_Aspirante, new SelectList(ViewBag.lst_ing_institucion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaMotivo_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaMotivo_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-8" id="otro_motivo_ingreso" hidden>
                            <div class="form-group">
                                <label for="IdEmpresa">Otro motivo de Ingreso</label>
                                @Html.TextBoxFor(q => q.OtroMotivoIngreso_Aspirante, new { @class = "form-control", @id = "OtroMotivoIngreso_Aspirante" })
                                @Html.ValidationMessageFor(m => m.OtroMotivoIngreso_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">¿Cómo se informó de nuestra institución?*</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaInst_Aspirante, new SelectList(ViewBag.lst_institucion, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaInst_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaInst_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-8" id="otro_informacion_inst" hidden>
                            <div class="form-group">
                                <label for="IdEmpresa">Otra información</label>
                                @Html.TextBoxFor(q => q.OtroInformacionInst_Aspirante, new { @class = "form-control", @id = "OtroInformacionInst_Aspirante" })
                                @Html.ValidationMessageFor(m => m.OtroInformacionInst_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="IdEmpresa">¿Cómo financiara los estudios?*</label>
                                @Html.DropDownListFor(q => q.IdCatalogoFichaFinanc_Aspirante, new SelectList(ViewBag.lst_financiamiento, "IdCatalogoFicha", "NomCatalogoFicha"), new { @class = "form-control", @id = "IdCatalogoFichaFinanc_Aspirante" })
                                @Html.ValidationMessageFor(q => q.IdCatalogoFichaFinanc_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-8" id="otro_forma_financ" hidden>
                            <div class="form-group">
                                <label for="IdEmpresa">Otra forma de financiamiento</label>
                                @Html.TextBoxFor(q => q.OtroFinanciamiento_Aspirante, new { @class = "form-control", @id = "OtroFinanciamiento_Aspirante" })
                                @Html.ValidationMessageFor(m => m.OtroFinanciamiento_Aspirante, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_admisiondocumentos">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.Action("GridViewPartial_DocumentosAdmision")
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_prematricula">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Año Lectivo*</label>
                                @Html.Partial("_ComboBoxPartial_Anio", Model)
                                @Html.ValidationMessageFor(q => q.IdAnio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="IdEmpresa">Curso*</label>
                                @Html.Partial("_ComboBoxPartial_Curso", Model)
                                @Html.ValidationMessageFor(q => q.IdComboCurso, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="IdEmpresa">Paralelo*</label>
                                @Html.Partial("_ComboBoxPartial_Paralelo", Model)
                                @Html.ValidationMessageFor(q => q.IdParalelo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="pf_fecha">Fecha*</label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.DevExpress().DateEditFor(q => q.Fecha, settings =>
                            {
                                settings.Name = "Fecha";
                                settings.Properties.UseMaskBehavior = true;
                                settings.Properties.EditFormat = EditFormat.Date;
                                settings.Properties.EditFormatString = "dd/MM/yyyy";
                                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Date;
                                settings.Properties.AllowMouseWheel = false;
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Properties.AllowMouseWheel = false;
                            }).GetHtml()
                                    @Html.ValidationMessageFor(q => q.Fecha, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="IdEmpresa">Plantilla*</label>
                                @Html.Partial("_ComboBoxPartial_Plantilla", Model)
                                @Html.ValidationMessageFor(q => q.IdPlantilla, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label for="IdEmpresa">Valor total</label>
                            @Html.TextBoxFor(q => q.ValorPlantilla, new { @class = "form-control", @id = "ValorPlantilla", @readonly = "readonly" })
                            @Html.ValidationMessageFor(q => q.ValorPlantilla, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            <label for="IdEmpresa">Valor pronto pago</label>
                            @Html.TextBoxFor(q => q.ValorPlantillaProntoPago, new { @class = "form-control", @id = "ValorPlantillaProntoPago", @readonly = "readonly" })
                            @Html.ValidationMessageFor(q => q.ValorPlantillaProntoPago, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="obligatorio"></label>
                                @Html.DevExpress().CheckBoxFor(q => q.EsPatrocinado, settings =>
                            {
                                settings.Name = "EsPatrocinado";
                                settings.Text = "Es Patrocinado";
                            }).GetHtml()
                                @Html.ValidationMessageFor(q => q.EsPatrocinado, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdPuntoVta">Punto de venta*</label>
                                @Html.DropDownListFor(q => q.IdPuntoVta, new SelectList(ViewBag.lst_ptoventa, "IdPuntoVta", "nom_PuntoVta"), new { @class = "form-control", @id = "IdPuntoVta" })
                                @Html.ValidationMessageFor(q => q.IdPuntoVta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Mecanismo de pago*</label>
                                @Html.DropDownListFor(q => q.IdMecanismo, new SelectList(ViewBag.lst_mecanismo, "IdMecanismo", "NombreMecanismo"), new { @class = "form-control", @id = "IdMecanismo" })
                                @Html.ValidationMessageFor(q => q.IdMecanismo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="IdEmpresa">Mecanismo de pago otros rubros*</label>
                                @Html.DropDownListFor(q => q.IdMecanismoDet, new SelectList(ViewBag.lst_mecanismo, "IdMecanismo", "NombreMecanismo"), new { @class = "form-control", @id = "IdMecanismoDet" })
                                @Html.ValidationMessageFor(q => q.IdMecanismoDet, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                @*<div class="row">
                    <div class="col-md-12">
                        <div class="col-md-3" id="datos_punto_venta1">
                            <div class="form-group">
                                <label for="Serie1">Establecimiento*</label>
                                @Html.TextBoxFor(q => q.vt_serie1, new { @class = "form-control", @id = "vt_serie1" })
                                @Html.ValidationMessageFor(q => q.vt_serie1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="datos_punto_venta2">
                            <div class="form-group">
                                <label for="Serie2">Pto. Emisión*</label>
                                @Html.TextBoxFor(q => q.vt_serie2, new { @class = "form-control", @id = "vt_serie2" })
                                @Html.ValidationMessageFor(q => q.vt_serie2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="datos_punto_venta3">
                            <div class="form-group">
                                <label for="NumNota_Impresa"># Documento*</label>
                                @Html.TextBoxFor(q => q.vt_NumFactura, new { @class = "form-control", @id = "vt_NumFactura" })
                                @Html.ValidationMessageFor(q => q.vt_NumFactura, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>*@
                <div class="row" id="Empleado" hidden>
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <label for="IdEmpresa">Empleado</label>
                            @Html.Partial("_CmbEmpleado", Model)
                            @Html.ValidationMessageFor(q => q.IdEmpleado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <label for="IdEmpresa">Observación</label>
                            @Html.TextBoxFor(q => q.Observacion, new { @class = "form-control", id = "Observacion" })
                            @Html.ValidationMessageFor(q => q.Observacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br />
                <div id="Tabs" role="tabpanel">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        @*<li class="active">
                            <a href="#tb_matricula_paralelo" aria-controls="general" role="tab" data-toggle="tab">Alumnos por paralelo</a>
                        </li>*@
                        <li class="active">
                            <a href="#tb_plantilla_detalle" aria-controls="otros" role="tab" data-toggle="tab">Detalle de plantilla</a>
                        </li>
                        <li>
                            <a href="#tb_documento" aria-controls="otros" role="tab" data-toggle="tab">Documentos por curso</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content" style="padding-top: 20px">
                        <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_plantilla_detalle">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.Action("GridViewPartial_DetallePlantilla")
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div role="tabpanel" class="tab-pane" style="margin-left: 2em;" id="tb_documento">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.Action("GridViewPartial_Documentos")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index", "ProcesarAdmision", new { Area = "Academico" }, null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
<script type="text/javascript">
        $(function () {
            mostrar_representante();

            mostrar_vehiculo_padre();
            mostrar_vehiculo_madre();
            mostrar_vehiculo_representante();

            mostrar_cliente_padre();
            mostrar_cliente_madre();
            mostrar_cliente_representante();

            mostrar_ArchivosAspirante();

            mostrar_otro_motivo();
            mostrar_otro_informacion_inst();
            mostrar_otro_financiamiento();
            mostrar_div();

            sumar_ingresos();
            sumar_egresos();

            $("#IdCatalogoFichaMotivo_Aspirante").change(function () {
                mostrar_otro_motivo();
            });

            $("#IdCatalogoFichaInst_Aspirante").change(function () {
                mostrar_otro_informacion_inst();
            });

            $("#IdCatalogoFichaFinanc_Aspirante").change(function () {
                mostrar_otro_financiamiento();
            });

            $("#SueldoPadre").change(function () {
                sumar_ingresos();
            });
            $("#SueldoMadre").change(function () {
                sumar_ingresos();
            });
            $("#OtroIngresoPadre").change(function () {
                sumar_ingresos();
            });

            $("#OtroIngresoMadre").change(function () {
                sumar_ingresos();
            });

            $("#GastoAlimentacion").change(function () {
                sumar_egresos();
            });
            $("#GastoEducacion").change(function () {
                sumar_egresos();
            });
            $("#GastoServicioBasico").change(function () {
                sumar_egresos();
            });
            $("#GastoSalud").change(function () {
                sumar_egresos();
            });
            $("#GastoArriendo").change(function () {
                sumar_egresos();
            });
            $("#GastoPrestamo").change(function () {
                sumar_egresos();
            });
            $("#OtroGasto").change(function () {
                sumar_egresos();
            });

            $("#IdMecanismoDet").change(function () {
                VerDatosEmpleado();
            });

            $("#IdMecanismo").change(function () {
                VerDatosEmpleado();
            });

            MostrarBotonesRepresentante();
        })
        //$("#Celular_Aspirante").blur(function () {
        //    Validar_cedula_ruc();
        //});

        $("#CedulaRuc_Padre").change(function () {
            Validar_cedula_ruc_padre();
        });

        $("#CedulaRuc_Madre").change(function () {
            Validar_cedula_ruc_madre();
        });

        $("#Apellidos_Aspirante").change(function () {
            actualizar_nombre_completo();
        });
        $("#Nombres_Aspirante").change(function () {
            actualizar_nombre_completo();
        });

        $("#Apellidos_Padre").change(function () {
            actualizar_nombre_completo_padre("N");
        });
        $("#Nombres_Padre").change(function () {
            actualizar_nombre_completo_padre("N");
        });
        $("#RazonSocial_Padre").change(function () {
            actualizar_nombre_completo_padre("R");
        });

        $("#Apellidos_Madre").change(function () {
            actualizar_nombre_completo_madre("N");
        });
        $("#Nombres_Madre").change(function () {
            actualizar_nombre_completo_madre("N");
        });
        $("#RazonSocial_Madre").change(function () {
            actualizar_nombre_completo_madre("R");
        });

        $("#Apellidos_Representante").change(function () {
            actualizar_nombre_completo_representante("N");
        });
        $("#Nombres_Representante").change(function () {
            actualizar_nombre_completo_representante("N");
        });
        $("#RazonSocial_Representante").change(function () {
            actualizar_nombre_completo_representante("R");
        });

        $("#CedulaRuc_Aspirante").change(function () {
            get_info_x_num_cedula();
        });

        $("#CedulaRuc_Padre").change(function () {
            get_info_x_num_cedula_padre();
            if ($("#CedulaRuc_Padre").val() == "") {
                $("#TienePadre").val("0");
            }
            else {
                $("#TienePadre").val("1");
            }
            MostrarBotonesRepresentante();
        });

        $("#CedulaRuc_Madre").change(function () {
            get_info_x_num_cedula_madre();
            if ($("#CedulaRuc_Madre").val() == "") {
                $("#TieneMadre").val("0");
            }
            else {
                $("#TieneMadre").val("1");
            }
            MostrarBotonesRepresentante();
        });
        
        $("#CedulaRuc_Representante").change(function () {
            get_info_x_num_cedula_representante();
        });

        $("#CedulaRuc_Aspirante").change(function () {
            var tipo_doc = $("#IdTipoDocumento_Aspirante").val();
            var cedula = $("#CedulaRuc_Aspirante").val();

            if (tipo_doc == "RUC") {
                if (cedula.length > 13) {
                    var len = $("#CedulaRuc_Aspirante").val();
                    len = len.substring(0, 13);
                    $("#CedulaRuc_Aspirante").val(len);
                }
            }
            else
                if (tipo_doc == "CED") {
                    if (cedula.length > 10) {
                        var len = $("#CedulaRuc_Aspirante").val();
                        len = len.substring(0, 10);
                        $("#CedulaRuc_Aspirante").val(len);
                    }
                }
        });

        $("#CedulaRuc_Padre").change(function () {
            var tipo_doc = $("#IdTipoDocumento_Padre").val();
            var cedula = $("#CedulaRuc_Padre").val();

            if (tipo_doc == "RUC") {
                if (cedula.length > 13) {
                    var len = $("#CedulaRuc_Padre").val();
                    len = len.substring(0, 13);
                    $("#CedulaRuc_Padre").val(len);
                }

            }
            else
                if (tipo_doc == "CED") {
                    if (cedula.length > 10) {
                        var len = $("#CedulaRuc_Padre").val();
                        len = len.substring(0, 10);
                        $("#CedulaRuc_Padre").val(len);
                    }
                }
        });

        $("#CedulaRuc_Madre").change(function () {
            var tipo_doc = $("#IdTipoDocumento_Madre").val();
            var cedula = $("#CedulaRuc_Madre").val();

            if (tipo_doc == "RUC") {
                if (cedula.length > 13) {
                    var len = $("#CedulaRuc_Madre").val();
                    len = len.substring(0, 13);
                    $("#CedulaRuc_Madre").val(len);
                }

            }
            else
                if (tipo_doc == "CED") {
                    if (cedula.length > 10) {
                        var len = $("#CedulaRuc_Madre").val();
                        len = len.substring(0, 10);
                        $("#CedulaRuc_Madre").val(len);
                    }
                }
        });

        function actualizar_nombre_completo() {
            var apellido = $("#Apellidos_Aspirante").val();
            var nombre = $("#Nombres_Aspirante").val();

            var nombre_completo = apellido + ' ' + nombre;
            $("#NombreCompleto_Aspirante").val(nombre_completo)
        }

        function get_info_x_num_cedula() {
            var cedula = $("#CedulaRuc_Aspirante").val();
            var tipo_doc = $("#IdTipoDocumento_Aspirante").val();

            if (cedula == null) {
                vaciar_campos_persona();
                return;
            }

            if (tipo_doc == "RUC") {
                if (cedula.length != 13) {
                    alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                    $("#Celular_Aspirante").val("");
                    vaciar_campos_persona();
                    return;
                }
            } else
                if (tipo_doc == "CED") {
                    if (cedula.length != 10) {
                        alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                        $("#Celular_Aspirante").val("");
                        vaciar_campos_persona();
                        return;
                    }
                }

            var datos = {
                IdEmpresa: $("#IdEmpresa").val(),
                IdAnio: IdAnio.GetValue(),
                pe_cedulaRuc: cedula
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_info_x_num_cedula_Prematricula", "ProcesarAdmision",new { Area = "Academico"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "") {
                        return;
                    }

                    if (data.IdPreMatricula != 0) {
                        alert("El aspirante ya esta prematriculado.");
                    }
                    else {
                        if (data.IdAlumno != 0) {
                            $("#IdAlumno").val(data.IdAlumno);
                        }

                        if (data.IdPersona != 0) {
                            $("#IdPersona_Aspirante").val(data.IdPersona);
                            $("#Naturaleza_Aspirante").val(data.pe_Naturaleza);
                            $("#IdTipoDocumento_Aspirante").val(data.IdTipoDocumento);
                            $("#Nombres_Aspirante").val(data.pe_nombre);
                            $("#Apellidos_Aspirante").val(data.pe_apellido);
                            $("#NombreCompleto_Aspirante").val(data.pe_nombreCompleto);
                            $("#Sexo_Aspirante").val(data.pe_sexo);
                            FechaNacimiento_Aspirante.SetDate(new Date(data.anio, data.mes, data.dia));
                            $("#Correo_Aspirante").val(data.pe_correo);
                            $("#Celular_Aspirante").val(data.pe_celular);
                            $("#Direccion_Aspirante").val(data.pe_direccion);
                            $("#pe_telfono_Contacto").val(data.pe_telfono_Contacto);
                            $("#CodCatalogoSangre_Aspirante").val(data.CodCatalogoSangre);
                            $("#CodCatalogoCONADIS_Aspirante").val(data.CodCatalogoCONADIS);
                            $("#NumeroCarnetConadis_Aspirante").val(data.NumeroCarnetConadis);
                            $("#PorcentajeDiscapacidad_Aspirante").val(data.PorcentajeDiscapacidad);
                            IdReligion_Aspirante.SetValue(data.IdReligion);
                            AsisteCentroCristiano_Aspirante.SetChecked(data.AsisteCentroCristiano);
                            IdGrupoEtnico_Aspirante.SetValue(data.IdGrupoEtnico);
                        }
                        else {
                            vaciar_campos_persona();
                        }
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }

        function get_info_x_num_cedula_padre() {
            var cedula = $("#CedulaRuc_Padre").val();
            var tipo_doc = $("#IdTipoDocumento_Padre").val();

            if (cedula == null) {
                vaciar_campos_padre();
                return;
            }

            if (tipo_doc == "RUC") {
                if (cedula.length != 13) {
                    alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                    $("#CedulaRuc_Padre").val("");
                    vaciar_campos_padre();
                    return;
                }
            } else
                if (tipo_doc == "CED") {
                    if (cedula.length != 10) {
                        alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                        $("#CedulaRuc_Padre").val("");
                        vaciar_campos_padre();
                        return;
                    }
                }

            var datos = {
                pe_cedulaRuc: cedula
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_info_x_num_cedula_persona", "ProcesarAdmision",new { Area = "Academico"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "") {
                        return;
                    }
                    else {
                        if (data.IdPersona != 0) {
                            $("#IdPersona_Padre").val(data.IdPersona);
                            $("#Naturaleza_Padre").val(data.pe_Naturaleza);
                            $("#IdTipoDocumento_Padre").val(data.IdTipoDocumento);
                            $("#Nombres_Padre").val(data.pe_nombre);
                            $("#Apellidos_Padre").val(data.pe_apellido);
                            $("#NombreCompleto_Padre").val(data.pe_nombreCompleto);
                            $("#RazonSocial_Padre").val(data.pe_razonSocial);
                            $("#Sexo_Padre").val(data.pe_sexo);
                            FechaNacimiento_Padre.SetDate(new Date(data.anio, data.mes, data.dia));
                            $("#Direccion_Padre").val(data.pe_direccion);
                            $("#Telefono_Padre").val(data.pe_telfono_Contacto);
                            $("#Celular_Padre").val(data.pe_celular);
                            $("#Correo_Padre").val(data.pe_correo);
                            $("#IdEstadoCivil_Padre").val(data.IdEstadoCivil);
                            IdProfesion_Padre.SetValue(data.IdProfesion);
                            $("#CodCatalogoCONADIS_Padre").val(data.CodCatalogoCONADIS);
                            $("#PorcentajeDiscapacidad_Padre").val(data.PorcentajeDiscapacidad);
                            $("#NumeroCarnetConadis_Padre").val(data.NumeroCarnetConadis);
                            $("#IdGrupoEtnico_Padre").val(data.IdGrupoEtnico);
                            $("#IdReligion_Padre").val(data.IdReligion);
                            $("#IdProfesion_Padre").val(data.IdProfesion);
                            AsisteCentroCristiano_Padre.SetChecked(data.AsisteCentroCristiano);
                            SeFactura_Padre.SetChecked(false);
                            mostrar_vehiculo_padre();
                        }
                        else {
                            vaciar_campos_padre();
                            IdPais_Padre.SetValue(data.IdPais);
                            Cod_Region_Padre.SetValue(data.Cod_Region);
                            IdProvincia_Padre.SetValue(data.IdProvincia);
                            IdCiudad_Padre.SetValue(data.IdCiudad);
                            IdParroquia_Padre.SetValue(data.IdParroquia);
                        }
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }

        function get_info_x_num_cedula_madre() {
            var cedula = $("#CedulaRuc_Madre").val();
            var tipo_doc = $("#IdTipoDocumento_Madre").val();

            if (cedula == null) {
                vaciar_campos_madre();
                return;
            }

            if (tipo_doc == "RUC") {
                if (cedula.length != 13) {
                    alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                    $("#Celular_Madre").val("");
                    vaciar_campos_padre();
                    return;
                }
            } else
                if (tipo_doc == "CED") {
                    if (cedula.length != 10) {
                        alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                        $("#Celular_Madre").val("");
                        vaciar_campos_madre();
                        return;
                    }
                }

            var datos = {
                pe_cedulaRuc: cedula
            }
            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("get_info_x_num_cedula_persona", "ProcesarAdmision",new { Area = "Academico"})',
                async: false,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == "") {
                        return;
                    }
                    else {
                        if (data.IdPersona != 0) {
                            $("#IdPersona_Madre").val(data.IdPersona);
                            $("#Naturaleza_Madre").val(data.pe_Naturaleza);
                            $("#IdTipoDocumento_Madre").val(data.IdTipoDocumento);
                            $("#Nombres_Madre").val(data.pe_nombre);
                            $("#Apellidos_Madre").val(data.pe_apellido);
                            $("#NombreCompleto_Madre").val(data.pe_nombreCompleto);
                            $("#RazonSocial_Madre").val(data.pe_razonSocial);
                            $("#Sexo_Madre").val(data.pe_sexo);
                            $("#Direccion_Madre").val(data.pe_direccion);
                            $("#Telefono_Madre").val(data.pe_telfono_Contacto);
                            $("#Celular_Madre").val(data.pe_celular);
                            $("#Correo_Madre").val(data.pe_correo);
                            $("#IdEstadoCivil_Madre").val(data.IdEstadoCivil);
                            FechaNacimiento_Madre.SetDate(new Date(data.anio, data.mes, data.dia));
                            ("#FechaNacimiento_Madre").val(Fecha);
                            $("#CodCatalogoCONADIS_Madre").val(data.CodCatalogoCONADIS);
                            $("#PorcentajeDiscapacidad_Madre").val(data.PorcentajeDiscapacidad);
                            $("#NumeroCarnetConadis_Madre").val(data.NumeroCarnetConadis);
                            $("#IdGrupoEtnico_Madre").val(data.IdGrupoEtnico);
                            $("#IdReligion_Madre").val(data.IdReligion);
                            $("#IdProfesion_Madre").val(data.IdProfesion);
                            AsisteCentroCristiano_Madre.SetChecked(data.AsisteCentroCristiano);
                            SeFactura_Madre.SetChecked(false);
                            mostrar_vehiculo_madre();
                        }
                        else {
                            vaciar_campos_madre();
                            IdPais_Madre.SetValue(data.IdPais);
                            Cod_Region_Madre.SetValue(data.Cod_Region);
                            IdProvincia_Madre.SetValue(data.IdProvincia);
                            IdCiudad_Madre.SetValue(data.IdCiudad);
                            IdParroquia_Madre.SetValue(data.IdParroquia);
                        }
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }

    function get_info_x_num_cedula_representante() {
        var cedula = $("#CedulaRuc_Representante").val();
        var tipo_doc = $("#IdTipoDocumento_Representante").val();

        if (cedula == null) {
            vaciar_campos_representante();
            return;
        }

        if (tipo_doc == "RUC") {
            if (cedula.length != 13) {
                alert("El documento de tipo RUC, debe tener una longitud de 13 caracteres");
                $("#Celular_Representante").val("");
                vaciar_campos_representante();
                return;
            }
        } else
            if (tipo_doc == "CED") {
                if (cedula.length != 10) {
                    alert("El documento de tipo cédula, debe tener una longitud de 10 caracteres");
                    $("#Celular_Representante").val("");
                    vaciar_campos_representante();
                    return;
                }
            }

        var datos = {
            pe_cedulaRuc: cedula
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("get_info_x_num_cedula_persona", "ProcesarAdmision",new { Area = "Academico"})',
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "") {
                    return;
                }
                else {
                    if (data.IdPersona != 0) {
                        $("#IdPersona_Representante").val(data.IdPersona);
                        $("#Naturaleza_Representante").val(data.pe_Naturaleza);
                        $("#IdTipoDocumento_Representante").val(data.IdTipoDocumento);
                        $("#Nombres_Representante").val(data.pe_nombre);
                        $("#Apellidos_Representante").val(data.pe_apellido);
                        $("#NombreCompleto_Representante").val(data.pe_nombreCompleto);
                        $("#RazonSocial_Representante").val(data.pe_razonSocial);
                        $("#Sexo_Representante").val(data.pe_sexo);
                        $("#Direccion_Representante").val(data.pe_direccion);
                        $("#Telefono_Representante").val(data.pe_telfono_Contacto);
                        $("#Celular_Representante").val(data.pe_celular);
                        $("#Correo_Representante").val(data.pe_correo);
                        $("#IdEstadoCivil_Representante").val(data.IdEstadoCivil);
                        FechaNacimiento_Representante.SetDate(new Date(data.anio, data.mes, data.dia));
                        $("#CodCatalogoCONADIS_Representante").val(data.CodCatalogoCONADIS);
                        $("#PorcentajeDiscapacidad_Representante").val(data.PorcentajeDiscapacidad);
                        $("#NumeroCarnetConadis_Representante").val(data.NumeroCarnetConadis);
                        $("#IdGrupoEtnico_Representante").val(data.IdGrupoEtnico);
                        $("#IdReligion_Representante").val(data.IdReligion);
                        $("#IdProfesion_Representante").val(data.IdProfesion);
                        AsisteCentroCristiano_Representante.SetChecked(data.AsisteCentroCristiano);
                        SeFactura_Representante.SetChecked(false);
                        mostrar_vehiculo_madre();
                    }
                    else {
                        vaciar_campos_representante();
                        IdPais_Representante.SetValue(data.IdPais);
                        Cod_Region_Representante.SetValue(data.Cod_Region);
                        IdProvincia_Representante.SetValue(data.IdProvincia);
                        IdCiudad_Representante.SetValue(data.IdCiudad);
                        IdParroquia_Madre.SetValue(data.IdParroquia);
                    }
                }
            },
            error: function (error) {
                alert(error);
            }
        });
    }
        function vaciar_campos_persona() {
            $("#IdPersona_Aspirante").val(0);
            $("#Nombres_Aspirante").val("");
            $("#Apellidos_Aspirante").val("");
            $("#NombreCompleto_Aspirante").val("");
            $("#Sexo_Aspirante").val("");
            FechaNacimiento_Aspirante.SetDate(null);
            $("#Correo_Aspirante").val("");
            $("#Celular_Aspirante").val("");
            $("#Direccion_Aspirante").val("");
            $("#Telefono_Aspirante").val("");
            $("#CodCatalogoSangre_Aspirante").val("");
            $("#CodCatalogoCONADIS").val("");
            $("#NumeroCarnetConadis").val("");
            $("#PorcentajeDiscapacidad").val("");
            IdReligion.SetValue(null);
            IdGrupoEtnico_Aspirante.SetValue(null);
            AsisteCentroCristiano.SetChecked(false);
        }

        function vaciar_campos_padre() {
            $("#IdPersona_Padre").val(0);
            $("#Nombres_Padre").val("");
            $("#Apellidos_Padre").val("");
            $("#NombreCompleto_Padre").val("");
            $("#RazonSocial_Padre").val("");
            FechaNacimiento_Padre.SetDate(null);
            $("#Correo_Padre").val("");
            $("#Celular_Padre").val("");
            $("#Direccion_Padre").val("");
            $("#Telefono_Padre").val("");
            //$("#CodCatalogoSangre_Aspirante_Padre").val("");
            $("#CodCatalogoCONADIS_Padre").val("");
            $("#NumeroCarnetConadis_Padre").val("");
            $("#PorcentajeDiscapacidad_Padre").val("");
            $("#IdEstadoCivil_Padre").val("");
            $("#Sexo_Padre").val("");
            //$("#IdProfesion_Padre").val("0");
            IdProfesion_Padre.SetValue(null);
            $("#EmpresaTrabajo_Padre").val("");
            $("#DireccionTrabajo_Padre").val("");
            $("#TelefonoTrabajo_Padre").val("");
            $("#CargoTrabajo_Padre").val("");
            $("#AniosServicio_Padre").val("");
            $("#IngresoMensual_Padre").val("0");
            VehiculoPropio_Padre.SetChecked(false);
            CasaPropia_Padre.SetChecked(false);
            $("#Marca_Padre").val("");
            $("#Modelo_Padre").val("");
            $("#AnioVehiculo_Padre").val("");
            IdReligion_Padre.SetValue(null);
            AsisteCentroCristiano_Padre.SetChecked(false);
            IdPais_Padre.SetValue(null);
            Cod_Region_Padre.SetValue(null);
            IdProvincia_Padre.SetValue(null);
            IdCiudad_Padre.SetValue(null);
            IdParroquia_Padre.SetValue(null);
            $("#Sector_Padre").val("");

            mostrar_vehiculo_padre();
        }

        function vaciar_campos_madre() {
            $("#IdPersona_Madre").val(0);
            $("#Nombres_Madre").val("");
            $("#Apellidos_Madre").val("");
            $("#NombreCompleto_Madre").val("");
            $("#RazonSocial_Madre").val("");
            FechaNacimiento_Madre.SetDate(null);
            $("#Correo_Madre").val("");
            $("#Celular_Madre").val("");
            $("#Direccion_Madre").val("");
            $("#Telefono_Madre").val("");
            //$("#CodCatalogoSangre_Aspirante_Madre").val("");
            $("#CodCatalogoCONADIS_Madre").val("");
            $("#NumeroCarnetConadis_Madre").val("");
            $("#PorcentajeDiscapacidad_Madre").val("");
            $("#IdEstadoCivil_Madre").val("");
            $("#Sexo_Madre").val("");
            //$("#IdProfesion_Madre").val("0");
            IdProfesion_Madre.SetValue(null);
            $("#EmpresaTrabajo_Madre").val("");
            $("#DireccionTrabajo_Madre").val("");
            $("#TelefonoTrabajo_Madre").val("");
            $("#CargoTrabajo_Madre").val("");
            $("#AniosServicio_Madre").val("");
            $("#IngresoMensual_Madre").val("0");
            VehiculoPropio_Madre.SetChecked(false);
            CasaPropia_Madre.SetChecked(false);
            $("#Marca_Madre").val("");
            $("#Modelo_Madre").val("");
            $("#AnioVehiculo_Madre").val("");
            IdReligion_Madre.SetValue(null);
            AsisteCentroCristiano_Madre.SetChecked(false);
            IdPais_Madre.SetValue(null);
            Cod_Region_Madre.SetValue(null);
            IdProvincia_Madre.SetValue(null);
            IdCiudad_Madre.SetValue(null);
            IdParroquia_Madre.SetValue(null);
            $("#Sector_Madre").val("");

            mostrar_vehiculo_madre();
        }

        function vaciar_campos_representante() {
            $("#IdPersona_Representante").val(0);
            $("#Nombres_Representante").val("");
            $("#Apellidos_Representante").val("");
            $("#NombreCompleto_Representante").val("");
            $("#RazonSocial_Representante").val("");
            FechaNacimiento_Representante.SetDate(null);
            $("#Correo_Representante").val("");
            $("#Celular_Representante").val("");
            $("#Direccion_Representante").val("");
            $("#Telefono_Representante").val("");
            //$("#CodCatalogoSangre_Aspirante_Representante").val("");
            $("#CodCatalogoCONADIS_Representante").val("");
            $("#NumeroCarnetConadis_Representante").val("");
            $("#PorcentajeDiscapacidad_Representante").val("");
            $("#IdEstadoCivil_Representante").val("");
            $("#Sexo_Representante").val("");
            //$("#IdProfesion_Representante").val("0");
            IdProfesion_Representante.SetValue(null);
            $("#EmpresaTrabajo_Representante").val("");
            $("#DireccionTrabajo_Representante").val("");
            $("#TelefonoTrabajo_Representante").val("");
            $("#CargoTrabajo_Representante").val("");
            $("#AniosServicio_Representante").val("");
            $("#IngresoMensual_Representante").val("0");
            VehiculoPropio_Representante.SetChecked(false);
            CasaPropia_Representante.SetChecked(false);
            $("#Marca_Representante").val("");
            $("#Modelo_Representante").val("");
            $("#AnioVehiculo_Representante").val("");
            IdReligion_Representante.SetValue(null);
            AsisteCentroCristiano_Representante.SetChecked(false);
            IdPais_Representante.SetValue(null);
            Cod_Region_Representante.SetValue(null);
            IdProvincia_Representante.SetValue(null);
            IdCiudad_Representante.SetValue(null);
            IdParroquia_Representante.SetValue(null);
            $("#Sector_Representante").val("");

            mostrar_vehiculo_representante();
        }


        function Validar_cedula_ruc() {
            var datos = {
                naturaleza: $("#Naturaleza_Aspirante").val(),
                tipo_documento: $("#IdTipoDocumento_Aspirante").val(),
                cedula_ruc: $("#Celular_Aspirante").val(),
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Validar_cedula_ruc", "ProcesarAdmision", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.isValid == true) {
                        $("#error_documento").hide();
                        $("#Naturaleza_Aspirante").val(data.return_naturaleza);
                    }
                    else {
                        $("#error_documento").show();
                    }
                },
                error: function (error) {
                }
            });
        };

        function Validar_cedula_ruc_padre() {
            var datos = {
                naturaleza: $("#Naturaleza_Padre").val(),
                tipo_documento: $("#IdTipoDocumento_Padre").val(),
                cedula_ruc: $("#CedulaRuc_Padre").val(),
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Validar_cedula_ruc", "ProcesarAdmision", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.isValid == true) {
                        $("#error_documento_padre").hide();
                        $("#Naturaleza_Padre").val(data.return_naturaleza);
                    }
                    else {
                        $("#error_documento_padre").show();
                    }
                },
                error: function (error) {
                }
            });
        };

        function Validar_cedula_ruc_madre() {
            var datos = {
                naturaleza: $("#Naturaleza_Madre").val(),
                tipo_documento: $("#IdTipoDocumento_Madre").val(),
                cedula_ruc: $("#CedulaRuc_Madre").val(),
            }

            $.ajax({
                type: 'POST',
                data: JSON.stringify(datos),
                url: '@Url.Action("Validar_cedula_ruc", "ProcesarAdmision", new { Area = "Academico" })',
                async: false,
                bDeferRender: true,
                bProcessing: true,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.isValid == true) {
                        $("#error_documento_madre").hide();
                        $("#Naturaleza_Madre").val(data.return_naturaleza);
                    }
                    else {
                        $("#error_documento_madre").show();
                    }
                },
                error: function (error) {
                }
            });

            function Validar_cedula_ruc_representante() {
                var datos = {
                    naturaleza: $("#Naturaleza_Representante").val(),
                    tipo_documento: $("#IdTipoDocumento_Representante").val(),
                    cedula_ruc: $("#CedulaRuc_Representante").val(),
                }

                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("Validar_cedula_ruc", "ProcesarAdmision", new { Area = "Academico" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.isValid == true) {
                            $("#error_documento_representante").hide();
                            $("#Naturaleza_Representante").val(data.return_naturaleza);
                        }
                        else {
                            $("#error_documento_representante").show();
                        }
                    },
                    error: function (error) {
                    }
                });
            };
        };

        function actualizar_nombre_completo_padre(Tipo) {
            console.log(Tipo);
            if (Tipo == "N") {
                var apellido = $("#Apellidos_Padre").val();
                var nombre = $("#Nombres_Padre").val();

                var nombre_completo = apellido + ' ' + nombre;
                $("#NombreCompleto_Padre").val(nombre_completo)
            }
            else {
                var razon_social = $("#RazonSocial_Padre").val();
                $("#NombreCompleto_Padre").val(razon_social)
            }
        }

        function actualizar_nombre_completo_madre(Tipo) {
            if (Tipo == "N") {
                var apellido = $("#Apellidos_Madre").val();
                var nombre = $("#Nombres_Madre").val();

                var nombre_completo = apellido + ' ' + nombre;
                $("#NombreCompleto_Madre").val(nombre_completo)
            }
            else {
                var razon_social = $("#RazonSocial_Madre").val();
                $("#NombreCompleto_Madre").val(razon_social)
            }
        }

        function actualizar_nombre_completo_representante(Tipo) {
            if (Tipo == "N") {
                var apellido = $("#Apellidos_Representante").val();
                var nombre = $("#Nombres_Representante").val();

                var nombre_completo = apellido + ' ' + nombre;
                $("#NombreCompleto_Representante").val(nombre_completo)
            }
            else {
                var razon_social = $("#RazonSocial_Representantee").val();
                $("#NombreCompleto_Representante").val(razon_social)
            }
        }

        function mostrar_vehiculo_padre() {
            if (VehiculoPropio_Padre.GetValue() == true) {
                $("#vehiculo_padre").show();
            }
            else {
                $("#vehiculo_padre").hide();
            }
        }

        function mostrar_vehiculo_madre() {
            if (VehiculoPropio_Madre.GetValue() == true) {
                $("#vehiculo_madre").show();
            }
            else {
                $("#vehiculo_madre").hide();
            }
        }

        function mostrar_vehiculo_representante() {
            if (VehiculoPropio_Representante.GetValue() == true) {
                $("#vehiculo_representante").show();
            }
            else {
                $("#vehiculo_representante").hide();
            }
        }
        function mostrar_cliente_padre() {
            if (SeFactura_Padre.GetValue() == true) {
                $("#DatosFacturacionPadre").show();
            }
            else {
                $("#DatosFacturacionPadre").hide();
            }
        }

        function mostrar_cliente_madre() {
            if (SeFactura_Madre.GetValue() == true) {
                $("#DatosFacturacionMadre").show();
            }
            else {
                $("#DatosFacturacionMadre").hide();
            }
        }

        function mostrar_cliente_representante() {
            if (SeFactura_Representante.GetValue() == true) {
                $("#DatosFacturacionRepresentante").show();
            }
            else {
                $("#DatosFacturacionRepresentante").hide();
            }
        }

        function mostrar_ArchivosAspirante() {
            var location = GetPathServer();
                var datos = {
                    IdEmpresa: $("#IdEmpresa").val(),
                    IdAdmision: $("#IdAdmision").val(),
                    IdTransaccionSession: $("#IdTransaccionSession").val()
                }
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(datos),
                    url: '@Url.Action("EnlistarDocumentos", "ProcesarAdmision", new { Area = "Academico" })',
                    async: false,
                    bDeferRender: true,
                    bProcessing: true,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        GridViewPartial_DocumentosAdmision.PerformCallback();
                    },
                    error: function (error) {
                    }
                });
        }

    function LimpiarListaDetalle() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("LimpiarListaDetalle", "ProcesarAdmision", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                $("#ValorPlantilla").val(data.Valor);
                $("#ValorPlantillaProntoPago").val(data.ProntoPago);

                GridViewPartial_DetallePlantilla.PerformCallback();
            },
            error: function (error) {
            }
        });
    }
    function SetMatriculaRubro() {
        $("#ValorPlantilla").val("");
        $("#ValorPlantillaProntoPago").val("");
        LimpiarListaDetalle();
        selectedIDs = "";
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdPlantilla: IdPlantilla.GetValue(),
            IdMatricula: $("#IdMatricula").val(),
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetMatriculaRubro", "ProcesarAdmision", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                $("#ValorPlantilla").val(data.Valor);
                $("#ValorPlantillaProntoPago").val(data.ProntoPago);
                GridViewPartial_DetallePlantilla.PerformCallback();
            },
            error: function (error) {
            }
        });
    }
    function SetDocumentos() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdAnio: IdAnio.GetValue(),
            IdCurso: IdComboCurso.GetValue(),
            IdAlumno: $("#IdAlumno").val(),
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("SetDocumentos", "ProcesarAdmision", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                GridViewPartial_Documentos.PerformCallback();
            },
            error: function (error) {
            }
        });
    }

    function mostrar_otro_motivo() {
        var MotivoIngreso = $("#IdCatalogoFichaMotivo_Aspirante").val();
        if (MotivoIngreso == 15) {
            $("#otro_motivo_ingreso").show();
        }
        else {
            $("#otro_motivo_ingreso").hide();
        }
    };

    function mostrar_otro_informacion_inst() {
        var MotivoIngreso = $("#IdCatalogoFichaInst_Aspirante").val();
        if (MotivoIngreso == 19) {
            $("#otro_informacion_inst").show();
        }
        else {
            $("#otro_informacion_inst").hide();
        }
    };

    function mostrar_otro_financiamiento() {
        var Informacion = $("#IdCatalogoFichaFinanc_Aspirante").val();
        if (Informacion == 22) {
            $("#otro_forma_financ").show();
        }
        else {
            $("#otro_forma_financ").hide();
        }
    };

    function mostrar_div() {
        if (TieneHermanos_Aspirante.GetValue() == true) {
            $("#cant_hermanos").show();
        }
        else {
            $("#cant_hermanos").hide();
        }
    }

    function sumar_ingresos() {
        var TotalIng = parseFloat($("#SueldoPadre").val()) + parseFloat($("#SueldoMadre").val()) + parseFloat($("#OtroIngresoPadre").val()) + parseFloat($("#OtroIngresoMadre").val());
        $("#TotalIngresos").val(TotalIng);
        saldo();
    };

    function sumar_egresos() {
        var TotalEgresos = parseFloat($("#GastoAlimentacion").val()) + parseFloat($("#GastoEducacion").val()) + parseFloat($("#GastoServicioBasico").val()) + parseFloat($("#GastoSalud").val()) + parseFloat($("#GastoArriendo").val()) + parseFloat($("#GastoPrestamo").val()) + parseFloat($("#OtroGasto").val());
        $("#TotalEgresos").val(TotalEgresos);
        saldo();
    };

    function saldo() {
        var Total = parseFloat($("#TotalIngresos").val()) - parseFloat($("#TotalEgresos").val());
        $("#Saldo").val(Total);
    };


    function SeFacturaPadre() {
        if (SeFactura_Padre.GetChecked()==true) {
            SeFactura_Madre.SetChecked(false);
            SeFactura_Representante.SetChecked(false);
        }
        mostrar_cliente_representante();
        mostrar_cliente_padre();
        mostrar_cliente_madre();
    };

    function SeFacturaMadre() {
        if (SeFactura_Madre.GetChecked() == true) {
            SeFactura_Padre.SetChecked(false);
            SeFactura_Representante.SetChecked(false);
        }
        mostrar_cliente_representante();
        mostrar_cliente_padre();
        mostrar_cliente_madre();
    };

    function SeFacturaRepresentante() {
        if (SeFactura_Representante.GetChecked() == true) {
            SeFactura_Madre.SetChecked(false);
            SeFactura_Padre.SetChecked(false);
        }
        mostrar_cliente_representante();
        mostrar_cliente_padre();
        mostrar_cliente_madre();
    };

    function VerDatosEmpleado() {
        var datos = {
            IdEmpresa: $("#IdEmpresa").val(),
            IdMecanismo: $("#IdMecanismo").val(),
            IdMecanismoOtros: $("#IdMecanismoDet").val()
        }
        $.ajax({
            type: 'POST',
            data: JSON.stringify(datos),
            url: '@Url.Action("GetDatosMecanismo", "ProcesarAdmision", new { Area = "Academico" })',
            async: false,
            bDeferRender: true,
            bProcessing: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.MostrarEmpleado == true) {
                    $("#Empleado").show();
                    $("#IdEmpresa_rol").val(data.IdEmpresa_rol)

                    IdEmpleado.PerformCallback();
                }
                else {
                    $("#Empleado").hide();
                }
            },
            error: function (error) {
            }
        });
    }

    function mostrar_representante() {
        if ($("#EsRepresentante_otro").val() == 1) {
            $("#RepresentanteLabel").html("Representante: Otra Persona");
            $("#DatosRepresentante").show();
        }
        else {
            if ($("#EsRepresentante_padre").val() == 1) {
                $("#RepresentanteLabel").html("Representante: Padre");
            }
            if ($("#EsRepresentante_madre").val() == 1) {
                $("#RepresentanteLabel").html("Representante: Madre");
            }

            $("#DatosRepresentante").hide();
        }
        
    }

    function PadreRepresentante() {
        $("#EsRepresentante_padre").val("1");
        $("#EsRepresentante_madre").val("0");
        $("#EsRepresentante_otro").val("0");
        $("#Representante").val("P");
        
        $("#RepresentanteLabel").html("Representante: Padre");
        
        mostrar_representante();
    }

    function MadreRepresentante() {
        $("#EsRepresentante_padre").val("0");
        $("#EsRepresentante_madre").val("1");
        $("#EsRepresentante_otro").val("0");
        $("#Representante").val("M");

        $("#RepresentanteLabel").html("Representante: Madre");

        mostrar_representante();
    }

    function OtroRepresentante() {
        $("#EsRepresentante_padre").val("0");
        $("#EsRepresentante_madre").val("0");
        $("#EsRepresentante_otro").val("1");
        $("#Representante").val("O");

        $("#RepresentanteLabel").html("Representante: Otro");

        mostrar_representante();
    }

    function MostrarBotonesRepresentante() {
        if ($("#TieneMadre").val() == "1") {
            $("#BtnMadreRep").show();
        }
        else {
            $("#BtnMadreRep").hide();
        }

        if ($("#TienePadre").val() == "1") {
            $("#BtnPadreRep").show();
        }
        else {
            $("#BtnPadreRep").hide();
        }
    }
    </script>
