@{
    var treeList = Html.DevExpress().TreeList(settings =>
    {
        settings.Name = "TreeListPartial_CorreoMasivo";
        settings.CallbackRouteValues = new { Controller = "CorreoMasivo", Action = "TreeListPartial_CorreoMasivo", IdEmpresa = ViewBag.IdEmpresa, IdAnio = ViewBag.IdAnio, IdSede = ViewBag.IdSede };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.KeyFieldName = "IdString";
        settings.ParentFieldName = "IdCurso";
        settings.Columns.Add(column =>
        {
            column.FieldName = "IdString";
            column.Width = System.Web.UI.WebControls.Unit.Percentage(10);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "*";
            column.FieldName = "seleccionado";
            column.ColumnType = MVCxTreeListColumnType.CheckBox;
            column.Width = System.Web.UI.WebControls.Unit.Percentage(5);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "Curso";
            column.FieldName = "NomCurso";
            column.Width = System.Web.UI.WebControls.Unit.Percentage(90);
        });

        settings.SettingsCookies.StoreSelection = true;
        settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Both;
        settings.SettingsPager.Visible = true;
        settings.SettingsSelection.Enabled = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsSelection.Recursive = true;
        settings.SettingsSelection.AllowSelectAll = true;
        settings.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
        settings.DataBound = (s, e) =>
        {
            MVCxTreeList tree = s as MVCxTreeList;
            string bId = ViewData["selectedIDs"] == null ? "" : ViewData["selectedIDs"].ToString();//I have a bId truly
            if (tree.Nodes.Count == 0) return;
            if (tree.Nodes[0] == null) return;
            if (string.IsNullOrEmpty(bId))
                return;
            TreeListNodeIterator iterator = tree.CreateNodeIterator();
            TreeListNode node = iterator.Current;
            tree.SelectAll();
            string[] array = ViewData["selectedIDs"].ToString().Split(',');
            int index = 0;
            while (node != null)
            {
                if (node["IdString"] != null)
                {
                    if (!string.IsNullOrEmpty(array.FirstOrDefault(q => q == node["IdString"].ToString())))
                    {
                        node.Selected = Convert.ToBoolean(node["seleccionado"]);
                    }
                    else
                        node.Selected = false;
                }

                index++;
                node = iterator.GetNext();
            }
        };
        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}

@treeList.Bind(Model).GetHtml()