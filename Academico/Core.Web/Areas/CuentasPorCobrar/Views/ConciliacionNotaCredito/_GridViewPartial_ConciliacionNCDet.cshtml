@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView_ConciliacionNCDet";
        settings.CallbackRouteValues = new { Controller = "ConciliacionNotaCredito", Action = "GridViewPartial_ConciliacionNCDet" };
        settings.KeyFieldName = "IdString";
        settings.Width = Unit.Percentage(100);

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ConciliacionNotaCredito", Action = "EditingUpdateFactura", Area = "CuentasPorCobrar" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ConciliacionNotaCredito", Action = "EditingDeleteFactura", Area = "CuentasPorCobrar" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.SettingsBehavior.EnableCustomizationWindow = true;

        //Configuración click derecho
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsContextMenu.EnableRowMenu = DefaultBoolean.True;

        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;


        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "vt_NumDocumento";
            column.Caption = "# Documento";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(40);
            column.FieldName = "ReferenciaDet";
            column.Caption = "Referencia";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "vt_fecha";
            column.Caption = "Fecha";
            column.PropertiesEdit.DisplayFormatString = "{0:dd/MM/yyyy}";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "vt_total";
            column.Caption = "Total";
            column.PropertiesEdit.DisplayFormatString = "{0:N2}";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "Saldo";
            column.Caption = "Saldo";
            column.PropertiesEdit.DisplayFormatString = "{0:N2}";
            column.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.FieldName = "Valor";
            column.Caption = "V. aplicado";
            column.PropertiesEdit.DisplayFormatString = "{0:N2}";
            column.EditorProperties().SpinEdit(p =>
            {
                p.MinValue = 0;
                p.DisplayFormatInEditMode = true;
                p.DisplayFormatString = "N2";
            });
        });
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "dc_ValorPago").DisplayFormat = "Total: {0:n2}";
        settings.Settings.ShowFooter = true;
        settings.ClientSideEvents.EndCallback = "function (s,e){CalcularSaldo();if (s.IsEditing()) {var editor = s.GetEditor('dc_ValorPago');editor.Focus();}}";

        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['TransaccionFixed'] = $('#IdTransaccionSession').val(); }";
    });
}
@grid.Bind(Model).GetHtml()